// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.6.1.0
//      SpecFlow Generator Version:1.6.0.0
//      Runtime Version:4.0.30319.261
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace DFM.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.6.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Money Movements")]
    public partial class MoneyMovementsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "C.Money.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Money Movements", "", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("001. Save without Description (E)")]
        [NUnit.Framework.CategoryAttribute("SaveOrUpdateMove")]
        public virtual void _001_SaveWithoutDescriptionE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("001. Save without Description (E)", new string[] {
                        "SaveOrUpdateMove"});
#line 4
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("002. Save without Date (E)")]
        public virtual void _002_SaveWithoutDateE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("002. Save without Date (E)", ((string[])(null)));
#line 5
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("003. Save with future Date (E)")]
        public virtual void _003_SaveWithFutureDateE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("003. Save with future Date (E)", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("004. Save without Category (E)")]
        public virtual void _004_SaveWithoutCategoryE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("004. Save without Category (E)", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("005. Save with not known Category (E)")]
        public virtual void _005_SaveWithNotKnownCategoryE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("005. Save with not known Category (E)", ((string[])(null)));
#line 8
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("006. Save with (Nature: Out) (AccountIn:No) (AccountOut:No) (E)")]
        public virtual void _006_SaveWithNatureOutAccountInNoAccountOutNoE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("006. Save with (Nature: Out) (AccountIn:No) (AccountOut:No) (E)", ((string[])(null)));
#line 10
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("007. Save with (Nature: Out) (AccountIn:Yes) (AccountOut:Yes) (E)")]
        public virtual void _007_SaveWithNatureOutAccountInYesAccountOutYesE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("007. Save with (Nature: Out) (AccountIn:Yes) (AccountOut:Yes) (E)", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("008. Save with (Nature: Out) (AccountIn:Yes) (AccountOut:No) (E)")]
        public virtual void _008_SaveWithNatureOutAccountInYesAccountOutNoE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("008. Save with (Nature: Out) (AccountIn:Yes) (AccountOut:No) (E)", ((string[])(null)));
#line 12
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("009. Save with (Nature: In) (AccountIn:No) (AccountOut:No) (E)")]
        public virtual void _009_SaveWithNatureInAccountInNoAccountOutNoE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("009. Save with (Nature: In) (AccountIn:No) (AccountOut:No) (E)", ((string[])(null)));
#line 13
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("010. Save with (Nature: In) (AccountIn:Yes) (AccountOut:Yes) (E)")]
        public virtual void _010_SaveWithNatureInAccountInYesAccountOutYesE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("010. Save with (Nature: In) (AccountIn:Yes) (AccountOut:Yes) (E)", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("011. Save with (Nature: In) (AccountIn:No) (AccountOut:Yes) (E)")]
        public virtual void _011_SaveWithNatureInAccountInNoAccountOutYesE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("011. Save with (Nature: In) (AccountIn:No) (AccountOut:Yes) (E)", ((string[])(null)));
#line 15
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("012. Save with (Nature: Transfer) (AccountIn:No) (AccountOut:No) (E)")]
        public virtual void _012_SaveWithNatureTransferAccountInNoAccountOutNoE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("012. Save with (Nature: Transfer) (AccountIn:No) (AccountOut:No) (E)", ((string[])(null)));
#line 16
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("013. Save with (Nature: Transfer) (AccountIn:Yes) (AccountOut:No) (E)")]
        public virtual void _013_SaveWithNatureTransferAccountInYesAccountOutNoE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("013. Save with (Nature: Transfer) (AccountIn:Yes) (AccountOut:No) (E)", ((string[])(null)));
#line 17
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("014. Save with (Nature: Transfer) (AccountIn:No) (AccountOut:Yes) (E)")]
        public virtual void _014_SaveWithNatureTransferAccountInNoAccountOutYesE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("014. Save with (Nature: Transfer) (AccountIn:No) (AccountOut:Yes) (E)", ((string[])(null)));
#line 18
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("015. Save without Value or Details (E)")]
        public virtual void _015_SaveWithoutValueOrDetailsE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("015. Save without Value or Details (E)", ((string[])(null)));
#line 20
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("016. Save with Value zero (E)")]
        public virtual void _016_SaveWithValueZeroE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("016. Save with Value zero (E)", ((string[])(null)));
#line 21
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("017. Save without Description in Detail (E)")]
        public virtual void _017_SaveWithoutDescriptionInDetailE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("017. Save without Description in Detail (E)", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("018. Save with Amount zero in Detail (E)")]
        public virtual void _018_SaveWithAmountZeroInDetailE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("018. Save with Amount zero in Detail (E)", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("019. Save with Value zero in Detail (E)")]
        public virtual void _019_SaveWithValueZeroInDetailE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("019. Save with Value zero in Detail (E)", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("096. Save with info all right (value) (S)")]
        public virtual void _096_SaveWithInfoAllRightValueS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("096. Save with info all right (value) (S)", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("097. Save with info all right (details) (S)")]
        public virtual void _097_SaveWithInfoAllRightDetailsS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("097. Save with info all right (details) (S)", ((string[])(null)));
#line 27
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("098. Save negative (value) (S)")]
        public virtual void _098_SaveNegativeValueS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("098. Save negative (value) (S)", ((string[])(null)));
#line 28
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("099. Save negative (details) (S)")]
        public virtual void _099_SaveNegativeDetailsS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("099. Save negative (details) (S)", ((string[])(null)));
#line 29
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("101. Try to get Move with wrong ID (E)")]
        [NUnit.Framework.CategoryAttribute("SelectMoveById")]
        public virtual void _101_TryToGetMoveWithWrongIDE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("101. Try to get Move with wrong ID (E)", new string[] {
                        "SelectMoveById"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("199. Get the Move by ID (S)")]
        public virtual void _199_GetTheMoveByIDS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("199. Get the Move by ID (S)", ((string[])(null)));
#line 33
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("201. Try to get Detail with wrong ID (E)")]
        [NUnit.Framework.CategoryAttribute("SelectDetailById")]
        public virtual void _201_TryToGetDetailWithWrongIDE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("201. Try to get Detail with wrong ID (E)", new string[] {
                        "SelectDetailById"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("299. Get the Detail by ID (S)")]
        public virtual void _299_GetTheDetailByIDS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("299. Get the Detail by ID (S)", ((string[])(null)));
#line 37
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("101. Try to delete Move with wrong ID (E)")]
        [NUnit.Framework.CategoryAttribute("DeleteMove")]
        public virtual void _101_TryToDeleteMoveWithWrongIDE()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("101. Try to delete Move with wrong ID (E)", new string[] {
                        "DeleteMove"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("199. Delete the Move by ID (S)")]
        public virtual void _199_DeleteTheMoveByIDS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("199. Delete the Move by ID (S)", ((string[])(null)));
#line 41
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion

#!/bin/bash

echyellow "This command will run gradle" \
    "  if it fails, it will run the write metadata command"

echyellow "The goal is to the CI to give the metadata if a step fail" \
    "  so one does not need to run it locally" \
    "  to complete the metadata file"

echyellow "tasks: " \
    "  $*"

gradle $* \
    && echyellow "Everything fine, just keep going" \
    || ERROR=$?

if [ "$ERROR" != "" ]; then
    rm -rf ~/.gradle/caches
    rm -rf .gradle

    echyellow "Something ended wrong, let's generate metadata"

    echyellow "1. Regenerate metadata"
    gradle $* --write-verification-metadata sha256
    export HAS_METADATA=$(git diff gradle/verification-metadata.xml | wc -l)

    if [ "$HAS_METADATA" == "0" ]; then
        echyellow "---- ok, manual generation is needed"

        gradle $* > failure.txt 2>&1 || ERROR=$?
        while [ "$ERROR" != "" ]; do
            ERROR=""
            echyellow "---- found error: $ERROR!"
            python3 ../.circleci/android/verification_metadata_libs.py
            git add gradle/verification-metadata.xml
            echyellow "---- let's run again!"
            gradle $* > failure.txt 2>&1 || ERROR=$?
        done
    else
        while [ "$HAS_METADATA" != "0" ]; do
            echyellow "---- found metadata to add: $HAS_METADATA!"
            git add gradle/verification-metadata.xml
            echyellow "---- let's recheck!"
            gradle $* --write-verification-metadata sha256
            export HAS_METADATA=$(git diff gradle/verification-metadata.xml | wc -l)
        done
    fi

    echyellow "2. Generate docs metadata"
    python3 ../.circleci/android/verification_metadata_docs.py
    git add ../.circleci/android/verification_metadata_resource_not_exists.txt

    echyellow "3. Commit!"
    source config-git
    git commit -m "android: update deps metadata"
    git push

    echyellow "Branch updated, CI will run again"

    echyellow "Now finishing with the original error"
    exit $ERROR
fi

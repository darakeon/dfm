@model DFM.MVC.Models.BaseLoggedModel
           
@{
    var menuList = new List<Menu>
    {
        Model.MenuWith("MonthMoves", String.Format(MultiLanguage.Dictionary["MonthMoves"], Model.CurrentMonth), "ShowMoves", "Report"),
        Model.MenuWith("YearMoves", String.Format(MultiLanguage.Dictionary["YearMoves"], Model.CurrentYear), "SummarizeMonths", "Report"),
        Model.MenuWith("CreateMove", MultiLanguage.Dictionary["Create", "Move"], "Create", "Move"),
        Model.MenuWith("ScheduleMove", MultiLanguage.Dictionary["Schedule", "Move"], "Schedule", "Move"),
    };
}

<div id="Menu">

    <div class="fixMenu">
        @Html.RouteLink(MultiLanguage.Dictionary["Categories"], RouteNames.Default, new { action = "Index", controller = "Category" }, new { @class = "fixItem" })
        @Html.RouteLink(MultiLanguage.Dictionary["Accounts"], RouteNames.Default, new { action = "Index", controller = "Account" }, new { @class = "fixItem" })
    </div>

    <div class="accountMenu">
        @if (Model.TooBigMeny(1350))
        {
            var invertedMenuList = new List<Menu> { 
                Model.MenuWith("Accounts", MultiLanguage.Dictionary["Accounts"], "Index", "Report")
            };
            
            invertedMenuList.AddRange(menuList);
            

            foreach (var item in invertedMenuList)
            { 
                <div class="higherMenu" id="@(item.ID)">
                    <a class="higherTitle Simple">@item.Text </a>

                    <div class="reportsMenu" id="Sub@(item.ID)">
                        <ul>
                            @foreach (var account in Model.LateralAccountList)
                            {
                                <li>
                                    @Html.RouteLink(account.Name, RouteNames.Accounts,
                                        new { controller = item.Controller, action = item.Action, accountname = account.Name },
                                        new { })
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }

            var weirdMenuExplanation = MultiLanguage.Dictionary["WeirdMenuExplanation"];
            
            <script type="text/javascript">
                var weirdMenuExplanation = '@weirdMenuExplanation';
            </script>
            <div class="higherMenu" id="weirdMenu">
                <a class="higherTitle">?</a>
            </div>
        }
        else
        {
            var accountname = this.ViewContext.RouteData.Values["accountname"] ?? "";

            foreach (var account in Model.LateralAccountList)
            {
                var isChosen = account.Name == accountname;
                
                <div class="higherMenu @if(isChosen) { @("light") }" id="@(account.ID)">
                    @Html.RouteLink(account.Name, RouteNames.Accounts,
                        new { controller = "Report", action = "Index", accountname = account.Name },
                        new { @class = "higherTitle" })

                    <div class="reportsMenu" id="Sub@(account.ID)">
                        <ul>
                            @foreach (var item in menuList)
                            {
                                <li>
                                    @Html.RouteLink(item.Text, RouteNames.Accounts,
                                        new { action = item.Action, controller = item.Controller, accountname = account.Name }, new { })
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }

        }
    </div>

</div>
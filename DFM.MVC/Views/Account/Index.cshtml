@model DFM.MVC.Models.AccountIndexModel

@using DFM.MVC.Helpers;

@{
    ViewBag.Title = PlainText.Dictionary["Accounts"];
    Layout = "~/Views/Shared/Inner/_Layout.cshtml";
}

@if (Model.AccountList.Count == 0)
{ 
    @PlainText.Dictionary["NoAccounts"]
}
else
{ 
    <table class='List'>

        <tr>
            <td>@PlainText.Dictionary["Name"]</td>
            <td>@PlainText.Dictionary["BeginDate"]</td>
            <td>@PlainText.Dictionary["Value"]</td>
            <td colspan="2">@PlainText.Dictionary["GOTO"]</td>
            <td colspan="3">@PlainText.Dictionary["TODO"]</td>
        </tr>

        @foreach (var account in Model.AccountList)
        { 
            
            <tr>
                <td>@account.Name </td>
                <td>@account.BeginDate.ToShortDateString() </td>

                @{ 
               var negative = account.MovesSum < 0;
               var value = (negative ? -account.MovesSum : account.MovesSum).ToMoney();
                }

                <td class="numeric @(negative ? "out" : "in")">@value</td>

                <td>@Html.RouteLink(
                        String.Format(PlainText.Dictionary["MonthMoves"], Model.CurrentMonth),
                        DFM.MVC.Helpers.RouteNames.Accounts,
                        new { action = "SeeMonth", controller = "Report", accountid = account.ID }, new { })</td>
                
                <td>@Html.RouteLink(
                        String.Format(PlainText.Dictionary["YearMoves"], Model.CurrentYear),
                        DFM.MVC.Helpers.RouteNames.Accounts,
                        new { action = "SeeYear", controller = "Report", accountid = account.ID }, new { })</td>
                
                <td>@Html.RouteLink(PlainText.Dictionary["Create", "Move"], DFM.MVC.Helpers.RouteNames.Accounts, new { action = "Create", controller = "Move", accountid = account.ID }, new { })</td>

                <td>@Html.RouteLink("Edit", DFM.MVC.Helpers.RouteNames.Default, new { action = "Edit", controller = "Account", id = account.ID }, new { })</td>

                <td>
                    @Ajax.ActionLink(
                            "Close", "Close", new { id = account.ID },
                            new AjaxOptionsDFM() { Confirm = String.Format("Do you really want to CLOSE Account '{0}'?", account.Name) }
                        ) 
                </td>
            </tr>

        } 

    </table>
} 

<div class="finalList">
    <button href="@Url.Action("Create")">New Account</button>
    <button href="@Url.Action("ListClosed")">See closed Accounts</button>
</div>
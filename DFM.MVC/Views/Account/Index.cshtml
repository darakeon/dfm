@model DFM.MVC.Models.AccountIndexModel

@{
    ViewBag.Title = PlainText.Dictionary["Accounts"];
    Layout = "~/Views/Shared/Inner/_Layout.cshtml";
}


@if (!Model.AccountList.Any())
{ 
    <div class="ZeroItems">@PlainText.Dictionary["NoAccounts"]</div>
}
else
{ 
    <table class="List">

        <tr>
            <th width="200px">@PlainText.Dictionary["Name"]</th>
            <th>@PlainText.Dictionary["BeginDate"]</th>
            <th>@PlainText.Dictionary["Value"]</th>
            <th colspan="2">@PlainText.Dictionary["Move"]</th>
            <th colspan="2">@PlainText.Dictionary["TODO"]</th>
        </tr>

        @foreach (var account in Model.AccountList)
        { 
            
            <tr>
                <td>@account.Name </td>
                <td>@account.BeginDate.ToShortDateString() </td>

                @{
               var movesSum = account.Sum();

               var negative = movesSum < 0;
               var value = (negative ? -movesSum : movesSum).ToMoney();
                }

                <td class="numeric @(negative ? "out" : "in")">@value</td>
                    
                <td>@Html.RouteLink(PlainText.Dictionary["Create"], RouteNames.Accounts, new { action = "Create", controller = "Move", accountid = account.ID }, new { })</td>

                <td>@Html.RouteLink(PlainText.Dictionary["Schedule"], RouteNames.Accounts, new { action = "Schedule", controller = "Move", accountid = account.ID }, new { })</td>

                <td>@Html.RouteLink(PlainText.Dictionary["Edit"], RouteNames.Default, new { action = "Edit", controller = "Account", id = account.ID }, new { })</td>

                <td>
                    @if (account.HasMoves())
                    {
                        @Ajax.ActionLink(
                                PlainText.Dictionary["Close"], "Close", new { id = account.ID },
                                new AjaxOptionsDFM() { Confirm = String.Format(PlainText.Dictionary["CloseConfirm"], account.Name) }
                            ) 
                    }
                    else
                    {
                        @Ajax.ActionLink(
                                PlainText.Dictionary["Delete"], "Delete", new { id = account.ID },
                                new AjaxOptionsDFM() { Confirm = String.Format(PlainText.Dictionary["DeleteConfirm"], account.Name) }
                            ) 
                    }
                </td>
            </tr>

        } 

    </table>
} 

<div class="tableFooterButtonList">
    <button href="@Url.Action("Create")">@PlainText.Dictionary["Create", "Account"]</button>
    <button href="@Url.Action("ListClosed")">@PlainText.Dictionary["ClosedAccounts"]</button>
</div>
@model DFM.MVC.Areas.Accounts.Models.MoveCreateEditScheduleModel

@{
    ViewBag.Title = PlainText.Dictionary[Model.ActionName, "Move"];
    Layout = "~/Views/Shared/Inner/_Layout.cshtml";
}

@section HtmlHeadCss { 
    <link href="/Assets/Css/Pages/MoveCreateEditSchedule.css" rel="stylesheet" type="text/css" />
}

@section HtmlHeadJs {
    <script type="text/javascript">
        var whetherShowAccountListPage = '@Url.Action("ShowAccountList")';
        var addDetailsPage = '@Url.Action("AddDetail")';
        var dayNames = '@PlainText.Dictionary["DayNames"]'.split(",");
    </script>

    <script src='/Assets/Script/Pages/MoveCreateEditSchedule.js' type='text/javascript'></script>
}

@section TopRightDiv { 
    <div id="newCategory">@Html.Action("Create", "Category", new { @area = String.Empty })</div>
}



@using (Html.BeginForm())
{

    @Html.ValidationSummary(true) 
    
    if (Model.IsSchedule)
    {
        @Html.HiddenFor(m => m.IsSchedule)

        <div class="createMoveScreenLeft">
            <div>
                @Html.LabelFor(m => m.Frequency, PlainText.Dictionary["Frequency"])<br />
                @Html.DropDownListFor(m => m.Frequency, Model.FrequencySelectList)
            </div>
        </div>
    
        <div class="createMoveScreenRight">
            <div>
                @Html.RadioButtonFor(m => m.Boundless, true, new { @class = "boundlessRadio" }) @(" ")
                @Html.LabelFor(m => m.Boundless, PlainText.Dictionary["Boundless"])<br />

                @Html.RadioButtonFor(m => m.Boundless, false, new { @class = "boundlessRadio" }) @(" ")
                @Html.LabelFor(m => m.Times, PlainText.Dictionary["Repeat"])
                @Html.TextBoxFor(m => m.Times, new { @class = "amount" }) @(" ")
                @Html.LabelFor(m => m.Times, PlainText.Dictionary["Times"])
            </div>
        </div>
    
        <div class="divRowForm"><hr /></div>
    }

    <div class="createMoveScreenLeft">
        <div>
            @Html.LabelFor(m => m.Description, PlainText.Dictionary["Description"]) 
            @Html.ValidationMessageFor(m => m.Description)<br />
            @Html.TextBoxFor(m => m.Description, new { maxlength = MaximumLength.MoveDescription })
            <span class='max'>@String.Format(PlainText.Dictionary["CharactersMax"], MaximumLength.MoveDescription)</span>
        </div>

        <div>
            @Html.LabelFor(m => m.Move.Date, PlainText.Dictionary["Date"])
            @Html.ValidationMessageFor(m => m.Move.Date)<br />
            @Html.TextBoxFor(m => m.Move.Date, new { @class = "date_notHour", disabled = "disabled" })
        </div>
    </div>
    
    <div class="createMoveScreenRight">
        <div>
            @Html.LabelFor(m => m.CategoryID, PlainText.Dictionary["Category"]) 
            @Html.ValidationMessageFor(m => m.CategoryID)<br />
            @Html.DropDownListFor(m => m.CategoryID, Model.CategorySelectList, "-- " + PlainText.Dictionary["Select"] + " --")

            <a href="#" type="button" id="newCategoryCaller">@PlainText.Dictionary["Create", "Category"]</a>
        </div>

        <div>
            @Html.LabelFor(m => m.Nature, PlainText.Dictionary["Nature"]) 

            @Html.ValidationMessageFor(m => m.Nature)
            @Html.ValidationMessageFor(m => m.AccountID)<br />
        
            @Html.DropDownListFor(m => m.Nature, Model.NatureSelectList)
            @Html.DropDownListFor(m => m.AccountID, Model.AccountSelectList, "-- " + PlainText.Dictionary["Select"] + " --")
        </div>
    </div>
    
    <div class="divRowForm"><hr /></div>
    
    <div class="createMoveScreenLeft">
        @Html.RadioButtonFor(m => m.IsDetailed, false, new { @class = "DetailLevel" })
        @PlainText.Dictionary["JustOneValue"]
    </div> 
        
    <div class="createMoveScreenRight">
        @Html.RadioButtonFor(m => m.IsDetailed, true, new { @class = "DetailLevel" })
        @PlainText.Dictionary["Detailed"]
        
        <a href="#" id="addDetailCaller" onclick="AddDetail()">@PlainText.Dictionary["Add", "Detail"]</a>
    </div>

    <div id="oneValue" class="createMoveScreenLeft">
        <table class="List">
            <tr>
                <th>@Html.LabelFor(m => m.Move.DetailList[0].Value, PlainText.Dictionary["Value"])</th>
            </tr>
            <tr>
                <td>@Html.TextBoxFor(m => m.Move.DetailList[0].Value, new { @class = "money" })</td>
            </tr>
        </table>
        
        @Html.HiddenFor(m => m.Move.DetailList[0].ID)
    </div>
        
    <table class="createMoveScreenRight">
        <tbody id="details">
            <tr>
                <th>
                    @PlainText.Dictionary["Description"]
                    <span class='max'>@String.Format(PlainText.Dictionary["CharactersMax"], MaximumLength.DetailDescription)</span>
                </th>
                <th>@PlainText.Dictionary["Amount"]</th>
                <th>@PlainText.Dictionary["Value"]</th>
            </tr>

            @for (var d = 0; d < Model.Move.DetailList.Count; d++)
            {
                @Html.Action("AddDetail", new { position = d, id = Model.Move.DetailList[d].ID });
            }
        </tbody>
    </table>
    
    <div id="moveCreateButton">
        <button type="submit">@PlainText.Dictionary[Model.ActionName]!</button>
    </div>

}

@model DFM.MVC.Areas.Accounts.Models.MoveCreateEditScheduleModel

@{
    ViewBag.Title = PlainText.Dictionary[Model.ActionName, "Move"];
    Layout = "~/Views/Shared/Inner/_Layout.cshtml";
}

@section HtmlHead { 
    <script type="text/javascript">
        var whetherShowAccountListPage = '@Url.Action("ShowAccountList")';
        var addDetailsPage = '@Url.Action("AddDetail")';
    </script>

    <script src='@Url.Content("~/Assets/Script/Pages/MoveCreateEdit.js")' type='text/javascript'></script>
    <link href="@Url.Content("~/Assets/Css/Pages/MoveCreateEdit.css")" rel="stylesheet" type="text/css" />
}



<div id="newCategory">@Html.Action("Create", "Category", new { @area = String.Empty })</div>


@using (Html.BeginForm())
{

    <p>
        @Html.ValidationSummary(true) 
    </p>
    
    if (Model.IsScheduler)
    {
        @Html.LabelFor(m => m.Scheduler.Times, PlainText.Dictionary["TimesToSchedule"])
    
        @Html.TextBoxFor(m => m.Scheduler.Times, new { @class = "amount" })
        @Html.DropDownListFor(m => m.Scheduler.Frequency, Model.FrequencySelectList)

        <br />
    
        @Html.ValidationMessageFor(m => m.Scheduler.Times)
        @Html.ValidationMessageFor(m => m.Scheduler.Frequency)
    
        <hr />
    }

    <div class="createMoveScreenLeft">
        <div>
            @Html.LabelFor(m => m.Description, PlainText.Dictionary["Description"]) 
            @Html.ValidationMessageFor(m => m.Description)<br />
            @Html.TextBoxFor(m => m.Description)
        </div>

        <div>
            @Html.LabelFor(m => m.Move.Date, PlainText.Dictionary["Date"])
            @Html.ValidationMessageFor(m => m.Move.Date)<br />
            @Html.TextBoxFor(m => m.Move.Date, new { @class = "date" })
        </div>
    </div>

    <div class="createMoveScreenRight">
        <div>
            @Html.LabelFor(m => m.CategoryID, PlainText.Dictionary["Category"]) 
            @Html.ValidationMessageFor(m => m.CategoryID)<br />
            @Html.DropDownListFor(m => m.CategoryID, Model.CategorySelectList, "-- " + PlainText.Dictionary["Select"] + " --")

            <button type="button" id="newCategoryCaller">@PlainText.Dictionary["Create", "Category"]</button>
        </div>

        <div>
            @Html.LabelFor(m => m.Nature, PlainText.Dictionary["Nature"]) 

            @Html.ValidationMessageFor(m => m.Nature)
            @Html.ValidationMessageFor(m => m.AccountID)<br />
        
            @Html.DropDownListFor(m => m.Nature, Model.NatureSelectList)
            @Html.DropDownListFor(m => m.AccountID, Model.AccountSelectList, "-- " + PlainText.Dictionary["Select"] + " --")
        </div>
    </div>
    
    <hr />
    
    <div class="createMoveScreenLeft">
        @Html.RadioButtonFor(m => m.IsDetailed, false, new { @class = "DetailLevel" })
        @PlainText.Dictionary["JustOneValue"]
    </div> 
        
    <div class="createMoveScreenRight">
        @Html.RadioButtonFor(m => m.IsDetailed, true, new { @class = "DetailLevel" })
        @PlainText.Dictionary["Detailed"]
        
        <button id="addDetailButton" type="button" onclick="AddDetail()">@PlainText.Dictionary["Add", "Detail"]</button>
    </div>

    <div id="oneValue" class="createMoveScreenLeft">
        <table>
            <tr>
                <td>@Html.LabelFor(m => m.Move.DetailList[0].Amount, PlainText.Dictionary["Amount"])</td>
                <td>@Html.LabelFor(m => m.Move.DetailList[0].Value, PlainText.Dictionary["Value"])</td>
            </tr>
            <tr>
                <td>@Html.TextBoxFor(m => m.Move.DetailList[0].Amount, new { @class = "amount" })</td>
                <td>@Html.TextBoxFor(m => m.Move.DetailList[0].Value, new { @class = "money" })</td>
            </tr>
        </table>
        
        @Html.HiddenFor(m => m.Move.DetailList[0].ID)
    </div>
        
    <table id="details" class="createMoveScreenRight">
        <tr>
            <td>@PlainText.Dictionary["Description"]</td>
            <td>@PlainText.Dictionary["Amount"]</td>
            <td>@PlainText.Dictionary["Value"]</td>
        </tr>

        @for (var d = 0; d < Model.Move.DetailList.Count; d++)
        {
            @Html.Action("AddDetail", new
       {
           position = d,
           id = Model.Move.DetailList[d].ID
       });
        }
    </table>
    
    <div id="moveCreateButton">
        <button type="submit">@PlainText.Dictionary[Model.ActionName]!</button>
    </div>

}

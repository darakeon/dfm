// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DFM.Tests.BusinessLogic.A_Safe
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Ae. Validate User and get Ticket")]
    public partial class Ae_ValidateUserAndGetTicketFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "e.ValidateUserAndGetTicket.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Ae. Validate User and get Ticket", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ae01. Validate without e-mail")]
        public virtual void Ae01_ValidateWithoutE_Mail()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ae01. Validate without e-mail", ((string[])(null)));
#line 5
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "Retype Password"});
            table1.AddRow(new string[] {
                        "Ae01@dontflymoney.com",
                        "password",
                        "password"});
#line 6
 testRunner.Given("I have this user created", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table2.AddRow(new string[] {
                        "",
                        "password"});
#line 9
  testRunner.And("I have this user data", ((string)(null)), table2, "And ");
#line 12
 testRunner.When("I try to get the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.Then("I will receive this core error: InvalidUser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
  testRunner.And("I will receive no ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ae02. Validate without password")]
        public virtual void Ae02_ValidateWithoutPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ae02. Validate without password", ((string[])(null)));
#line 16
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "Retype Password"});
            table3.AddRow(new string[] {
                        "Ae02@dontflymoney.com",
                        "password",
                        "password"});
#line 17
 testRunner.Given("I have this user created", ((string)(null)), table3, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table4.AddRow(new string[] {
                        "Ae02@dontflymoney.com",
                        ""});
#line 20
  testRunner.And("I have this user data", ((string)(null)), table4, "And ");
#line 23
 testRunner.When("I try to get the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("I will receive this core error: InvalidUser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 25
  testRunner.And("I will receive no ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ae03. Validate with wrong e-mail")]
        public virtual void Ae03_ValidateWithWrongE_Mail()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ae03. Validate with wrong e-mail", ((string[])(null)));
#line 27
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table5.AddRow(new string[] {
                        "dont_exist@dontflymoney.com",
                        "password"});
#line 28
 testRunner.Given("I have this user data", ((string)(null)), table5, "Given ");
#line 31
 testRunner.When("I try to get the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.Then("I will receive this core error: InvalidUser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
  testRunner.And("I will receive no ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ae04. Validate with wrong password")]
        public virtual void Ae04_ValidateWithWrongPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ae04. Validate with wrong password", ((string[])(null)));
#line 35
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "Retype Password"});
            table6.AddRow(new string[] {
                        "Ae04@dontflymoney.com",
                        "password",
                        "password"});
#line 36
 testRunner.Given("I have this user created", ((string)(null)), table6, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table7.AddRow(new string[] {
                        "Ae04@dontflymoney.com",
                        "password_wrong"});
#line 39
  testRunner.And("I have this user data", ((string)(null)), table7, "And ");
#line 42
 testRunner.When("I try to get the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.Then("I will receive this core error: InvalidUser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 44
  testRunner.And("I will receive no ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ae05. Validate user disabled")]
        public virtual void Ae05_ValidateUserDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ae05. Validate user disabled", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "Retype Password"});
            table8.AddRow(new string[] {
                        "Ae05@dontflymoney.com",
                        "password",
                        "password"});
#line 47
 testRunner.Given("I have this user created", ((string)(null)), table8, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table9.AddRow(new string[] {
                        "Ae05@dontflymoney.com",
                        "password"});
#line 50
  testRunner.And("I have this user data", ((string)(null)), table9, "And ");
#line 53
 testRunner.When("I try to get the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
 testRunner.Then("I will receive this core error: DisabledUser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 55
  testRunner.And("I will receive no ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ae06. Disable user by excessive trying")]
        public virtual void Ae06_DisableUserByExcessiveTrying()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ae06. Disable user by excessive trying", ((string[])(null)));
#line 57
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "Retype Password"});
            table10.AddRow(new string[] {
                        "Ae06@dontflymoney.com",
                        "password",
                        "password"});
#line 58
 testRunner.Given("I have this user created and activated", ((string)(null)), table10, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table11.AddRow(new string[] {
                        "Ae06@dontflymoney.com",
                        "password_wrong"});
#line 61
  testRunner.And("I have this user data", ((string)(null)), table11, "And ");
#line 64
 testRunner.When("I try to get the ticket 5 times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
 testRunner.Then("I will receive this core error: DisabledUser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 66
  testRunner.And("I will receive no ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ae07. Validate disabled with wrong password")]
        public virtual void Ae07_ValidateDisabledWithWrongPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ae07. Validate disabled with wrong password", ((string[])(null)));
#line 68
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "Retype Password"});
            table12.AddRow(new string[] {
                        "Ae07@dontflymoney.com",
                        "password",
                        "password"});
#line 69
 testRunner.Given("I have this user created", ((string)(null)), table12, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table13.AddRow(new string[] {
                        "",
                        "wrong_password"});
#line 72
  testRunner.And("I have this user data", ((string)(null)), table13, "And ");
#line 75
 testRunner.When("I try to get the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
 testRunner.Then("I will receive this core error: InvalidUser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
  testRunner.And("I will receive no ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ae08. Validate with info all right")]
        public virtual void Ae08_ValidateWithInfoAllRight()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ae08. Validate with info all right", ((string[])(null)));
#line 79
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "Retype Password"});
            table14.AddRow(new string[] {
                        "Ae90@dontflymoney.com",
                        "password",
                        "password"});
#line 80
 testRunner.Given("I have this user created", ((string)(null)), table14, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table15.AddRow(new string[] {
                        "Ae90@dontflymoney.com",
                        "password"});
#line 83
  testRunner.And("I have this user data", ((string)(null)), table15, "And ");
#line 86
  testRunner.And("I activate the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.When("I try to get the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
 testRunner.Then("I will receive no core error", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 89
  testRunner.And("I will receive the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ae09. Enable user let login again")]
        public virtual void Ae09_EnableUserLetLoginAgain()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ae09. Enable user let login again", ((string[])(null)));
#line 91
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "Retype Password"});
            table16.AddRow(new string[] {
                        "Ae91@dontflymoney.com",
                        "password",
                        "password"});
#line 92
 testRunner.Given("I have this user created and activated", ((string)(null)), table16, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table17.AddRow(new string[] {
                        "Ae91@dontflymoney.com",
                        "password_wrong"});
#line 95
  testRunner.And("I have this user data", ((string)(null)), table17, "And ");
#line 98
  testRunner.And("I tried to get the ticket 5 times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table18.AddRow(new string[] {
                        "Ae91@dontflymoney.com",
                        "password"});
#line 99
  testRunner.And("I have this user data", ((string)(null)), table18, "And ");
#line 102
  testRunner.And("I activate the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.When("I try to get the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
 testRunner.Then("I will receive no core error", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 105
  testRunner.And("I will receive the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ae10. Enable user resets the password trial times")]
        public virtual void Ae10_EnableUserResetsThePasswordTrialTimes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ae10. Enable user resets the password trial times", ((string[])(null)));
#line 107
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password",
                        "Retype Password"});
            table19.AddRow(new string[] {
                        "Ae92@dontflymoney.com",
                        "password",
                        "password"});
#line 108
 testRunner.Given("I have this user created and activated", ((string)(null)), table19, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table20.AddRow(new string[] {
                        "Ae92@dontflymoney.com",
                        "password_wrong"});
#line 111
  testRunner.And("I have this user data", ((string)(null)), table20, "And ");
#line 114
  testRunner.And("I tried to get the ticket 5 times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table21.AddRow(new string[] {
                        "Ae92@dontflymoney.com",
                        "password"});
#line 115
  testRunner.And("I have this user data", ((string)(null)), table21, "And ");
#line 118
  testRunner.And("I activate the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table22.AddRow(new string[] {
                        "Ae92@dontflymoney.com",
                        "password_wrong"});
#line 119
  testRunner.And("I have this user data", ((string)(null)), table22, "And ");
#line 122
  testRunner.And("I tried to get the ticket 1 times", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Password"});
            table23.AddRow(new string[] {
                        "Ae92@dontflymoney.com",
                        "password"});
#line 123
  testRunner.And("I have this user data", ((string)(null)), table23, "And ");
#line 126
 testRunner.When("I try to get the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
 testRunner.Then("I will receive no core error", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 128
  testRunner.And("I will receive the ticket", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

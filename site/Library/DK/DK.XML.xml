<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DK.XML</name>
    </assembly>
    <members>
        <member name="T:DK.XML.Node">
            <summary>
            Xml node structure
            </summary>
        </member>
        <member name="M:DK.XML.Node.#ctor">
            <summary>
             Xml node structure
            </summary>
        </member>
        <member name="M:DK.XML.Node.#ctor(System.String,System.String)">
            <summary>
            	Xml node structure
            </summary>
            <param name="name">Name for the new Node</param>
            <param name="value">Text Content for the new Node</param>
        </member>
        <member name="M:DK.XML.Node.#ctor(System.Xml.XmlNode,System.Boolean)">
            <summary>
             Xml node structure
            </summary>
            <param name="xmlNode">Initial XMLNode</param>
            <param name="readChilds">Whether is to read all the childs (recursive read)</param>
        </member>
        <member name="M:DK.XML.Node.#ctor(System.String,System.Boolean)">
             <summary>
             Xml node structure
             </summary>
            <param name="path">Path of the XML file</param>
            <param name="readChilds">Whether is to read all the childs (recursive read)</param>
        </member>
        <member name="P:DK.XML.Node.Name">
            <summary>
             Name of the tag of the Node
            </summary>
        </member>
        <member name="P:DK.XML.Node.Value">
            <summary>
             Text Content of the Node
            </summary>
        </member>
        <member name="P:DK.XML.Node.Attributes">
            <summary>
             The Attributes of current Node
            </summary>
        </member>
        <member name="P:DK.XML.Node.Childs">
            <summary>
             The Child Nodes
            </summary>
        </member>
        <member name="P:DK.XML.Node.Item(System.String)">
            <summary>
            Get attribute
            </summary>
            <param name="attribute">The attribute name</param>
            <returns>If found, the value of the attribute; Else, null</returns>
        </member>
        <member name="P:DK.XML.Node.Item(System.Int32)">
            <summary>
            Get child node
            </summary>
            <param name="node">The node position</param>
            <returns>If found, the child node; Else, null</returns>
        </member>
        <member name="M:DK.XML.Node.Add(DK.XML.Node)">
            <summary>
            Add Child
            </summary>
            <param name="node">Child Node</param>
        </member>
        <member name="M:DK.XML.Node.Add(System.String,System.String)">
            <summary>
            Add Attribute
            </summary>
            <param name="name">Attribute Name</param>
            <param name="value">Attribute Value</param>
        </member>
        <member name="M:DK.XML.Node.HasChilds">
            <summary>
             Whether it has child nodes
            </summary>
        </member>
        <member name="M:DK.XML.Node.BackUpAndSave">
            <summary>
            Create a backup of the old file in a subfolder backup and override the original file
            </summary>
        </member>
        <member name="M:DK.XML.Node.BackUpAndSave(System.String)">
            <summary>
            Create a backup of the old file in a subfolder backup and override the original file
            </summary>
        </member>
        <member name="M:DK.XML.Node.Overwrite">
            <summary>
            Saves OVERWRITING the original file 
            </summary>
        </member>
        <member name="M:DK.XML.Node.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:DK.XML.Node.GetEnumerator">
            <summary>
             To make ForEach
            </summary>
        </member>
    </members>
</doc>

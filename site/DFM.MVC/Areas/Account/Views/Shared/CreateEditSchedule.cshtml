@model BaseMovesModel

@using DFM.Entities;

<div class="createMoveScreenLeft">
	<div>
		@Html.LabelFor(m => m.Description, MultiLanguage.Dictionary["Description"])
		@Html.ValidationMessageFor(m => m.Description)<br />
		@Html.TextBoxFor(m => m.Description, new { maxlength = MaximumLength.MOVE_DESCRIPTION })
		<span class='input-ps'>@String.Format(MultiLanguage.Dictionary["CharactersMax"], MaximumLength.MOVE_DESCRIPTION)</span>
	</div>

	<div>
		@Html.LabelFor(m => m.Date, MultiLanguage.Dictionary["Date"])
		@Html.ValidationMessageFor(m => m.Date)<br />
		@Html.TextBoxFor(m => m.Date, new { @class = "date_notHour", disabled = "disabled" })
	</div>
</div>

<div class="createMoveScreenRight">

	@if (Auth.Current.User.Config.UseCategories)
	{
		<div>
			@Html.LabelFor(m => m.CategoryName, MultiLanguage.Dictionary["Category"])
			@Html.ValidationMessageFor(m => m.CategoryName)<br/>
			@Html.DropDownListFor(m => m.CategoryName, Model.CategorySelectList, "-- " + MultiLanguage.Dictionary["Select"] + " --")

			<a href="javascript:void(0)" type="button" id="new-category-caller">@MultiLanguage.Dictionary["Create", "Category"]</a>
		</div>

		<div class="nature-account">
			<div>
				@Html.LabelFor(m => m.Nature, MultiLanguage.Dictionary["Nature"])
				@Html.ValidationMessageFor(m => m.Nature)<br/>
				@Html.DropDownListFor(m => m.Nature, Model.NatureSelectList, new {@class = "nature-select"})
			</div>

			<div class="account-combo" data-out="1" data-in="0" data-transfer="1">
				@Html.LabelFor(m => m.AccountOutUrl, MultiLanguage.Dictionary["Out"])
				@Html.ValidationMessageFor(m => m.AccountOutUrl)<br/>
				@Html.DropDownListFor(m => m.AccountOutUrl, Model.AccountOutSelectList, "-- " + MultiLanguage.Dictionary["Select"] + " --")
			</div>

			<div class="account-combo" data-out="0" data-in="1" data-transfer="1">
				@Html.LabelFor(m => m.AccountInUrl, MultiLanguage.Dictionary["In"])
				@Html.ValidationMessageFor(m => m.AccountInUrl)<br/>
				@Html.DropDownListFor(m => m.AccountInUrl, Model.AccountInSelectList, "-- " + MultiLanguage.Dictionary["Select"] + " --")
			</div>
		</div>
	}
	else
	{
		<div>
			@Html.LabelFor(m => m.Nature, MultiLanguage.Dictionary["Nature"])
			@Html.ValidationMessageFor(m => m.Nature)<br/>
			@Html.DropDownListFor(m => m.Nature, Model.NatureSelectList, new {@class = "nature-select"})
		</div>

		<div class="nature-account">
			<div class="account-combo" data-out="1" data-in="0" data-transfer="1">
				@Html.LabelFor(m => m.AccountOutUrl, MultiLanguage.Dictionary["Out"])
				@Html.ValidationMessageFor(m => m.AccountOutUrl)<br/>
				@Html.DropDownListFor(m => m.AccountOutUrl, Model.AccountOutSelectList, "-- " + MultiLanguage.Dictionary["Select"] + " --")
			</div>

			<div class="account-combo" data-out="0" data-in="1" data-transfer="1">
				@Html.LabelFor(m => m.AccountInUrl, MultiLanguage.Dictionary["In"])
				@Html.ValidationMessageFor(m => m.AccountInUrl)<br/>
				@Html.DropDownListFor(m => m.AccountInUrl, Model.AccountInSelectList, "-- " + MultiLanguage.Dictionary["Select"] + " --")
			</div>
		</div>
	}

</div>

<div class="divRowForm"><hr /></div>

<div class="createMoveScreenLeft">
	@Html.RadioButtonFor(m => m.IsDetailed, false, new { @class = "detailLevel", id = "IsNotDetailed" })
	@* ReSharper disable once Html.IdNotResolved *@
	<label for="IsNotDetailed">@MultiLanguage.Dictionary["JustOneValue"]</label>
</div>

<div class="createMoveScreenRight">
	@Html.RadioButtonFor(m => m.IsDetailed, true, new { @class = "detailLevel" })
	@* ReSharper disable once Html.IdNotResolved *@
	<label for="IsDetailed">@MultiLanguage.Dictionary["Detailed"]</label>

	<a href="#" id="addDetailCaller" onclick="AddDetail('@Url.Action("Add", "Details")')">@MultiLanguage.Dictionary["Add", "Detail"]</a>
</div>

<div id="oneValue" class="createMoveScreenLeft">
	<table class="List">
		<tr>
			<th>@Html.LabelFor(m => m.Value, MultiLanguage.Dictionary["Value"])</th>
		</tr>
		<tr>
			<td>@Html.TextBoxFor(m => m.Value, new { @class = "money" })</td>
		</tr>
	</table>
</div>

<table class="createMoveScreenRight">
	<tbody id="details">
		<tr>
			<th>
				@MultiLanguage.Dictionary["Description"]
				<span class='input-ps'>@String.Format(MultiLanguage.Dictionary["CharactersMax"], MaximumLength.DETAIL_DESCRIPTION)</span>
			</th>
			<th>@MultiLanguage.Dictionary["Amount"]</th>
			<th>@MultiLanguage.Dictionary["Value"]</th>
		</tr>

		@if (Model.IsDetailed)
		{
			for (var d = 0; d < Model.DetailList.Count; d++)
			{
			@Html.Partial("../Details/Add", new DetailsAddModel(Model.DetailList[d], d))
			}
		}
		else
		{
		@Html.Partial("../Details/Add", new DetailsAddModel(new Detail(), 0))
		}
	</tbody>
</table>

<div id="moveCreateButton">
	<button type="submit">@MultiLanguage.Dictionary[Model.ActionName]!</button>
</div>
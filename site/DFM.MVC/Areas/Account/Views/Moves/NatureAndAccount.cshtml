@using DFM.Entities.Enums
@model BaseMovesModel

@{
	var natureUiList = new List<BaseMovesModel.NatureUI>
	{
		new BaseMovesModel.NatureUI(MoveNature.Out, ".combo-account-out", ".combo-account-in"),
		new BaseMovesModel.NatureUI(MoveNature.Transfer, ".combo-account-out, .combo-account-in"),
		new BaseMovesModel.NatureUI(MoveNature.In, ".combo-account-in", ".combo-account-out")
	};
}

@Html.HiddenFor(m => m.Nature)

<div class="row">

	<div class="col-sm-4 btn-group-vertical btn-group-sm">
		@foreach (var natureUI in natureUiList)
		{
			<button type="button"
			    class="btn btn-sm btn-@Html.Partial("NatureColor", natureUI.Nature)
					col-sm-4 button-toggle value-setter
					@(Model.Nature == natureUI.Nature ? "active" : "")"
			    data-to-enable="@natureUI.Enable"
			    data-to-disable="@natureUI.Disable"
			    data-target-id="@Html.IdFor(m => m.Nature)"
			    data-target-value="@natureUI.Nature"
				title="@MultiLanguage.Dictionary[natureUI.Nature.ToString()]"
			>

				<span class="pull-left">
					@MultiLanguage.Dictionary[natureUI.Nature.ToString()]
				</span>

				<span class="pull-right">
					<span
						class="@Html.Partial("NatureIcon", natureUI.Nature)"
					></span>
				</span>

			</button>
		}
	</div>

	<div class="col-sm-4 form-group side-vertical-button">
		@Html.LabelFor(m => m.AccountOutUrl, MultiLanguage.Dictionary["Account", "Out"], new { @class = "control-label" })
		<span
			class="@Html.Partial("NatureIcon", MoveNature.In)"
			title="@MultiLanguage.Dictionary[MoveNature.In.ToString()]"
		></span>

		@Html.DropDownListFor(
			m => m.AccountOutUrl,
			Model.AccountOutSelectList,
			"-- " + MultiLanguage.Dictionary["Select"] + " --",
			new { @class = "form-control combo-account-out text-danger" }
		)

		@Html.ValidationMessageFor(m => m.AccountOutUrl)
	</div>

	<div class="col-sm-4 form-group side-vertical-button">
		@Html.LabelFor(m => m.AccountInUrl, MultiLanguage.Dictionary["Account", "In"], new { @class = "control-label" })
		<span
			class="@Html.Partial("NatureIcon", MoveNature.Out)"
			title="@MultiLanguage.Dictionary[MoveNature.Out.ToString()]"
		></span>

		@Html.DropDownListFor(
			m => m.AccountInUrl,
			Model.AccountInSelectList,
			"-- " + MultiLanguage.Dictionary["Select"] + " --",
			new { @class = "form-control combo-account-in text-info" }
		)

		@Html.ValidationMessageFor(m => m.AccountInUrl)
	</div>
</div>


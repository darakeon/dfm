@model DFM.MVC.Models.AccountIndexModel

@{
    ViewBag.Title = MultiLanguage.Dictionary["Accounts"];
    Layout = "~/Views/Shared/Inner/_Layout.cshtml";
}

@if (!Model.AccountList.Any())
{ 
    <div class="ZeroItems">@MultiLanguage.Dictionary["NoAccounts"]</div>
}
else
{ 
    
    <table class="List">

        <tr>
            <th width="200px">@MultiLanguage.Dictionary["Name"]</th>
            <th>@MultiLanguage.Dictionary["BeginDate"]</th>
            <th colspan="2">@MultiLanguage.Dictionary["Value"]</th>
            <!--
            <th colspan="2">@MultiLanguage.Dictionary["Move"]</th>
            -->
            <th colspan="2">@MultiLanguage.Dictionary["TODO"]</th>
        </tr>

        @foreach (var account in Model.AccountList)
        {
            var language = account.User.Language;
            
            var movesSum = account.Sum();

            var negative = movesSum < 0;
            var value = (negative ? -movesSum : movesSum).ToMoney(language);

            var sign = account.Sign();
            
            
            var createLabel = MultiLanguage.Dictionary["Create", "Move"];
            var createUrl = Url.RouteUrl(RouteNames.Accounts, new { action = "Create", controller = "Move", accounturl = account.Url });
            
            var scheduleLabel = MultiLanguage.Dictionary["Schedule", "Move"];
            var scheduleUrl = Url.RouteUrl(RouteNames.Accounts, new { action = "Schedule", controller = "Move", accounturl = account.Url });
            
            var editLabel = MultiLanguage.Dictionary["Edit", "Account"];
            var editUrl = Url.Action("Edit", "Account", new { id = account.Name });


            var closeLabel = MultiLanguage.Dictionary["Close", "Account"];
            var closeUrl = Url.Action("Close", new { id = account.Name });
            var closeConfirm = String.Format(MultiLanguage.Dictionary["CloseConfirm"], account.Name);

            var deleteLabel = MultiLanguage.Dictionary["Delete", "Account"];
            var deleteUrl = Url.Action("Delete", new { id = account.Name });
            var deleteConfirm = String.Format(MultiLanguage.Dictionary["DeleteConfirm"], account.Name);

            <tr>
                <td>@account.Name </td>
                <td>@account.BeginDate.ToShortDateString() </td>

                <td class="numeric @(negative ? "out" : "in")">@value</td>
                    
                <td class="account_sign">@if (sign != null) { <img src="/Assets/image/@(sign)_sign.gif" alt="@sign" /> } </td>

                <!--
                <td class="image"><a href="@createUrl"><img src="/Assets/Image/create_move.gif" alt="@createLabel" title="@createLabel" /></a></td>
                <td class="image"><a href="@scheduleUrl"><img src="/Assets/Image/schedule_move.gif" alt="@scheduleLabel" title="@scheduleLabel" /></a></td>
                -->

                <td class="image"><a href="@editUrl"><img src="/Assets/Image/edit.gif" alt="@editLabel" title="@editLabel" /></a></td>

                <td class="image">
                    @if (account.HasMoves())
                    {
                        <a href="@closeUrl" class="withConfirm" confirm="@closeConfirm">
                            <img src="/Assets/Image/close.gif" alt="@closeLabel" title="@closeLabel" />
                        </a>
                    }
                    else
                    {
                        <a href="@deleteUrl" class="withConfirm" confirm="@deleteConfirm">
                            <img src="/Assets/Image/delete.gif" alt="@deleteLabel" title="@deleteLabel" />
                        </a>
                    }
                </td>
            </tr>

        } 

    </table>
} 

<div class="tableFooterButtonList">
    <button href="@Url.Action("Create")">@MultiLanguage.Dictionary["Create", "Account"]</button>
    <button href="@Url.Action("ListClosed")">@MultiLanguage.Dictionary["ClosedAccounts"]</button>
</div>
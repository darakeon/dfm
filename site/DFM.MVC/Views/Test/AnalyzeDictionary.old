@using System.Text.RegularExpressions
@model DFM.Multilanguage.PlainText

@{
	ViewBag.Title = "Analyze Dictionary";
	Layout = "~/Views/Shared/_OuterLayout.cshtml";
	
	var phrases = new List<String>();
}

@section HtmlHeadCss
{
	<link type="text/css" rel="stylesheet" href="/Assets/Css/Pages/analyse-dictionary.css" />
}

@foreach (var section in Model.SectionList)
{
	var data = new Dictionary<String, Dictionary<String, String>>
	{
		{ "Phrase", new Dictionary<String, String>() }
	};

	foreach (var language in section.LanguageList)
	{
		data["Phrase"].Add(language.Name, language.Name);

		foreach (var phrase in language.PhraseList)
		{
			var phraseName = Regex.Replace(phrase.Name, "([A-Z])", " $1");
			
			if (!data.ContainsKey(phraseName))
			{
				data.Add(phraseName, new Dictionary<String, String>());
			}

			data[phraseName].Add(language.Name, phrase.Text);
		}
	}
	
	<h3>@(section.Name.ToUpper())</h3>
	
	<table class="List">
		@foreach (var phrase in data)
		{
			<tr>
				
				<td>
					@phrase.Key
				</td>

				@foreach (var language in phrase.Value)
				{
					var key = phrase.Key + "_" + language.Key;
					
					<td class="@(phrases.Contains(key) ? "alert" : "")">
						@language.Value
					</td>
					
					phrases.Add(key);
				}

			</tr>
		}
	</table>
}

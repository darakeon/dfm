@using DFM.MVC.Areas.Account.Models
@model BaseModel

@{ var model = Model as BaseAccountModel; }

<nav class="navbar navbar-default navbar-fixed-top">
	<div class="container">
		<div class="navbar-header">
			<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-2">
				<span class="sr-only">Toggle navigation</span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
			</button>

			@if (ViewBag.HideTopLogo == null)
			{
				<a href="/" class="navbar-brand">Don't fly Money</a>
			}
		</div>

		<div class="collapse navbar-collapse" id="bs-example-navbar-collapse-2">
			<ul class="nav navbar-nav navbar-right">
				<li>
					@Html.Partial("MenuIssues")
				</li>

				<li>
					@Html.Partial("MenuTasks")
				</li>

				@if (!Model.IsAuthenticated)
				{
					<li>@Html.RouteLink(MultiLanguage.Dictionary["Login"], RouteNames.DEFAULT, new {action = "LogOn", controller = "Users"})</li>
					<li>@Html.RouteLink(MultiLanguage.Dictionary["SignUp"], RouteNames.DEFAULT, new {action = "SignUp", controller = "Users"})</li>
					<li>@Html.ActionLink(MultiLanguage.Dictionary["TokenReceivedByEmail"], "Index", "Tokens")</li>
				}
				else
				{
					if (Model.IsExternal)
					{
						<li>@Html.RouteLink(MultiLanguage.Dictionary["Enter"], RouteNames.DEFAULT, new {action = "Index", controller = "Accounts"})</li>
					}
					else if (model == null)
					{
						<li>@Html.RouteLink(MultiLanguage.Dictionary["Accounts"], RouteNames.DEFAULT, new { action = "Index", controller = "Accounts" })</li>

						if (Model.IsUsingCategories)
						{
						<li>@Html.RouteLink(MultiLanguage.Dictionary["Categories"], RouteNames.DEFAULT, new { action = "Index", controller = "Categories" })</li>
						}

						<li>@Html.RouteLink(MultiLanguage.Dictionary["Schedules"], RouteNames.DEFAULT, new { action = "Index", controller = "Schedules" })</li>
						<li>@Html.RouteLink(MultiLanguage.Dictionary["Logins"], RouteNames.DEFAULT, new { action = "Index", controller = "Logins" })</li>
					}
					else
					{
						if (model.Account.IsOpen())
						{
							<li>@Html.ActionLink(MultiLanguage.Dictionary["ToMove"], "Create", "Moves")</li>
							<li>@Html.ActionLink(MultiLanguage.Dictionary["Schedule"], "Create", "Schedules")</li>
						}

						<li>@Html.ActionLink(MultiLanguage.Dictionary["MonthMoves"], "ShowMoves", "Reports")</li>
						<li>@Html.ActionLink(MultiLanguage.Dictionary["YearMoves"], "SummarizeMonths", "Reports")</li>

						<li>
							<a href="@Url.RouteUrl(RouteNames.DEFAULT, new {action = "Index", controller = "Accounts"})">
								<span class="glyphicon glyphicon-home" title="@Legend.Home"></span>
							</a>
						</li>
					}

					<li>
						@Html.Partial("MenuSettings")
					</li>

					<li>
						<a href="@Url.RouteUrl(RouteNames.DEFAULT, new {action = "LogOff", controller = "Users"})">
							<span class="glyphicon glyphicon-off" title="@MultiLanguage.Dictionary["Logoff"]"></span>
						</a>
					</li>
				}

				@*<li class="active">
					<a href="#">Link <span class="sr-only">(current)</span></a>
				</li>*@

			</ul>
		</div>
	</div>
</nav>

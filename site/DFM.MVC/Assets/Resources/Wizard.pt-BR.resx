<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountsClosed" xml:space="preserve">
    <value>Nesta tela são listadas as Contas fechadas. Para essas Contas não é possível criar ou editar Movimentações, mas ainda é possível ver os relatórios.</value>
  </data>
  <data name="AccountsCreate" xml:space="preserve">
    <value>Cada Conta tem um Nome e uma Url. O Nome é para identificar a Conta, a Url é parte do endereço da área da Conta. Escolha um Nome e use a Url sugerida ou escolha outra Url, então clique no botão Criar.</value>
  </data>
  <data name="AccountsIndexEmpty" xml:space="preserve">
    <value>Esta é a tela inicial, onde aparecem as Contas. Contas são onde você guarda e de onde você gasta o dinheiro: conta de banco, cartão de crédito, dinheiro em casa, bilhete de transporte. Nesta tela é possível acessar a tela de criação de Contas.</value>
  </data>
  <data name="AccountsIndexFilled" xml:space="preserve">
    <value>Com a Conta criada, os detalhes dela são listados na tela. As opções da Conta são editar e deletar. Caso uma Conta possua Movimentações, não pode ser deletada, apenas fechada. Clicando no nome da Conta você entra na Área da Conta.</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categorias são usadas para dizer o tipo de Movimentação, por exemplo: Lazer, Saúde, Alimentação, Doação. Assim fica mais simples uma olhada rápida no Relatório Mensal dizer onde o dinheiro mais foi gasto.</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>parar de ver isso</value>
  </data>
  <data name="EndTextAndroid" xml:space="preserve">
    <value>Don't fly Money tem um aplicativo android na Play Store:</value>
  </data>
  <data name="EndTextContact" xml:space="preserve">
    <value>Se tiver algo a nos dizer, também pode entrar em contato pelo e-mail {0}. Responderemos assim que possível.</value>
  </data>
  <data name="EndTextMenu" xml:space="preserve">
    <value>Apenas algumas últimas coisas que pode encontrar no menu!</value>
  </data>
  <data name="EndTextMenuIssues" xml:space="preserve">
    <value>Se você tiver problemas, pode registrar clicando neste</value>
  </data>
  <data name="EndTextMenuSettings" xml:space="preserve">
    <value>Você pode reabilitar o Tutorial nas Configurações</value>
  </data>
  <data name="EndTextMenuTasks" xml:space="preserve">
    <value>Você pode ver as coisas feitas e a fazer (em inglês)</value>
  </data>
  <data name="EndTextThanks" xml:space="preserve">
    <value>Agradecemos por ler as mensagens do Tutorial.
Esperamos que agora conheça melhor o sistema Don't fly Money.</value>
  </data>
  <data name="Logins" xml:space="preserve">
    <value>Aqui você pode ver e desabilitar Logins feitos no sistema. Se desconfiar de algum acesso, ou algum dispositivo logado tenha sido acessado por terceiros não autorizados, é sugerido que os Logins sejam excluídos. Isso impedirá novo acesso sem uso de senha.</value>
  </data>
  <data name="MovesCreate" xml:space="preserve">
    <value>Uma Movimentação é uma Saída, Entrada ou Transferência de dinheiro. Para inserir, dê uma Descrição, uma Data e o Valor. Também é possível, ao invés de inserir um Valor único, inserir com Detalhes.

LEMBRANDO QUE O SISTEMA NÃO POSSUI LIGAÇÃO COM NENHUMA INSTITUIÇÃO EXTERNA, PORTANTO MOVIMENTAÇÕES FEITAS AQUI SÃO APENAS REGISTROS FEITOS POR VOCÊ INTERNAMENTE NESTE SISTEMA.</value>
  </data>
  <data name="SchedulesCreate" xml:space="preserve">
    <value>Esta tela server para criar Movimentações futuras, seja apenas uma ocorrência ou várias repetidas. As frequências possíveis são Diária, Mensal e Anual. É possível definir por quantos dias/meses/anos será a repetição, incluindo Agendamentos sem um limite.</value>
  </data>
  <data name="SchedulesIndexEmpty" xml:space="preserve">
    <value>Aqui são mostrados os Agendamentos feitos dentro da Área da Conta. Entre em uma Conta para criar um Agendamento, clicando em Agendar.</value>
  </data>
  <data name="SchedulesIndexFilled" xml:space="preserve">
    <value>Estes são os Agendamentos feitos dentro das Áreas das Contas. É possível cancelar um Agendamento, para que não insira mais Movimentações.</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Nesta tela é possível alterar informações de segurança e horário, o tema visto por você e habilitar e desabilitar funcionalidades. As funcionalidades habilitadas tornam o sistema mais complexo, mas fornecem mais ferramentas de controle do fluxo de dinheiro.</value>
  </data>
  <data name="ShowMovesEmpty" xml:space="preserve">
    <value>Nesta área é possível ver e criar Movimentações. Para adicionar Movimentações, clique em Mover, no menu acima.</value>
  </data>
  <data name="ShowMovesFilled" xml:space="preserve">
    <value>A tela inicial da Área da Conta apresenta as Movimentações por mês escolhido. É acessível pelo menu Extrato. Também é possível ver o Resumo Anual, clicando no menu acima.</value>
  </data>
  <data name="SummarizeMonths" xml:space="preserve">
    <value>Aqui são mostradas as somas do ano divididas por mês, assim é possível ter uma visão mais geral e comparativa do ano.</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Tutorial</value>
  </data>
</root>
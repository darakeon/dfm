@using DFM.Language.Extensions
@model SchedulesIndexModel

@{
	ViewBag.Title = Context.Translate("Schedules");

	ViewBag.WizardMessage =
		Model.ScheduleList.Any()
			? "SchedulesIndexFilled"
			: "SchedulesIndexEmpty";

	Layout = "~/Views/Shared/Layouts/_Table.cshtml";

	ViewBag.HasContent = Model.ScheduleList.Any();
	ViewBag.NoContentText = Context.Translate("NoSchedules");

	var useCategories = Context.GetService().Current.UseCategories;
	var descriptionSize = useCategories ? 2 : 4;

	/* ADD WARNING TO SCHEDULES THE WON'T RUN BECAUSE OF CATEGORY-USE PROBLEM */
}

@section TableHeader {
	<tr class="row">
		<th class="col-sm-@descriptionSize">
			@Context.Translate("Description")
		</th>

		@if (useCategories)
		{
			<th class="col-sm-2 text-center">
				@Context.Translate("Category")
			</th>
		}

		<th class="col-sm-2 text-center">@Context.Translate("Date")</th>
		<th class="col-sm-2 text-center">@Context.Translate("Account", "In")</th>
		<th class="col-sm-2 text-center">@Context.Translate("Account", "Out")</th>
		<th class="col-sm-1 text-center">@Context.Translate("Value")</th>
		<th class="col-sm-1 text-center">@Context.Translate("TODO")</th>
	</tr>
}

@foreach (var schedule in Model.ScheduleList)
{
	<tr class="row">
		<td class="col-sm-@descriptionSize">@schedule.Description</td>

		@if (useCategories)
		{
			<td class="col-sm-2 text-center">@(schedule.CategoryName ?? "---")</td>
		}

		<td class="col-sm-2 text-center">@schedule.GetDate().ToShortDateString()</td>
		<td class="col-sm-2 text-center">@(schedule.InName ?? " ")</td>
		<td class="col-sm-2 text-center">@(schedule.OutName ?? " ")</td>

		<td  class="col-sm-1 text-@await Html.PartialAsync("Extensions/NatureColor", schedule.Nature) text-right">
			<span
				class="@await Html.PartialAsync("Extensions/NatureIcon", schedule.Nature)"
				title="@Context.Translate(schedule.Nature.ToString())"
			></span>
			@schedule.Total.ToMoney(Model.Language)
		</td>

		<td class="col-sm-1 text-center">
			@await Html.PartialAsync("Extensions/MicroForm",
				MicroForm.WithGlyph(Context, "trash", "Delete")
					.AddIdUrl("Delete", schedule.Guid)
			)
		</td>
	</tr>
}

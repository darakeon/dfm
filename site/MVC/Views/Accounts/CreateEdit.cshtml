@model AccountsCreateEditModel

@{
	ViewBag.Title = Context.Translate(Model.ActionName, "Account");

	if (Model.Type == OperationType.Edition)
	{
		ViewBag.Title += $" [{Model.Account.Name}]";
	}

	Layout = "~/Views/Shared/Layouts/_Form.cshtml";

	var hl = new WizardHL()
		.AddBox("Name", 1)
		.AddBox("Button", 2);
}

@section Scripts {
	<script src="/Assets/scripts/suggest.js?v=@Cfg.Version" type="text/javascript"></script>
	<script src="/Assets/scripts/toggle.js?v=@Cfg.Version" type="text/javascript"></script>
}

<div class="form-group">
	@Html.LabelFor(m => m.Account.Name, Context.Translate("Name"), new { @class = "control-label" })
	@Html.TextBoxFor(m => m.Account.Name, new { maxlength = MaxLen.AccountName, @class = "form-control suggest-field " + hl["Name"], data_target = ".suggest-target" })
	<small>@String.Format(Context.Translate("CharactersMax"), MaxLen.AccountName)</small>
</div>

@Html.HiddenFor(m => m.Type)
@Html.HiddenFor(m => m.Account.OriginalUrl)

@if (Model.IsUsingAccountsSigns)
{
	<div class="form-group text-center">
		@Html.CheckBoxFor(m => m.HasLimit, new { @class = "check-toggle", data_to_enable = ".limit" })
		@Html.LabelFor(m => m.HasLimit, Context.Translate("AccountHasLimit"), new { @class = "control-label" })
		<span
			class="glyphicon glyphicon-info-sign"
			title="@Context.Translate("LimitExplanation")"
		></span>

		<br />
		@Context.Translate("GreenLimit") =
		(@await Html.PartialAsync("AccountSign", AccountSign.Green))
		//
		@Context.Translate("NoneLimit") =
		(@await Html.PartialAsync("AccountSign", AccountSign.None))
	</div>

	<div class="form-group">
		@Html.LabelFor(m => m.YellowLimit, Context.Translate("YellowLimit"), new { @class = "control-label" })
		(@await Html.PartialAsync("AccountSign", AccountSign.Yellow))
		@Html.TextBoxFor(m => m.YellowLimit, new { @class = "form-control limit number", data_allow_negative = 1, data_allow_zero = 1 })
	</div>

	<div class="form-group">
		@Html.LabelFor(m => m.RedLimit, Context.Translate("RedLimit"), new { @class = "control-label" })
		(@await Html.PartialAsync("AccountSign", AccountSign.Red))
		@Html.TextBoxFor(m => m.RedLimit, new { @class = "form-control limit number", data_allow_negative = 1, data_allow_zero = 1 })
	</div>
}

@section Footer {
	<button class="btn btn-success @hl["Button"]" type="submit">
		@Context.Translate(Model.ActionName)
	</button>
}

@model AccountsCreateEditModel

@{
	ViewBag.Title = Context.Translate(Model.ActionName, "Account");
	ViewBag.WizardMessage = "AccountsCreate";

	if (Model.Type == OperationType.Edition)
	{
		ViewBag.Title += $" [{Model.Account.Name}]";
	}

	Layout = "~/Views/Shared/_Form.cshtml";
}

@section Scripts {
	<script src="/Assets/Scripts/suggest.js" type="text/javascript"></script>
	<script src="/Assets/Scripts/toggle.js" type="text/javascript"></script>
}

<div class="form-group">
	@Html.LabelFor(m => m.Account.Name, Context.Translate("Name"), new { @class = "control-label" })
	@Html.TextBoxFor(m => m.Account.Name, new { maxlength = MaxLen.AccountName, @class = "form-control suggest-field", data_target = ".suggest-target" })
	<small>@String.Format(Context.Translate("CharactersMax"), MaxLen.AccountName)</small>
</div>

@Html.HiddenFor(m => m.Type)
@Html.HiddenFor(m => m.Account.OriginalUrl)

<div class="form-group">
	@Html.LabelFor(m => m.Account.Url, Context.Translate("Url"), new { @class = "control-label" })
	<span class="glyphicon glyphicon-info-sign control-label"
		  data-toggle="tooltip" data-placement="right"
		  title="@String.Format(Context.Translate("AcceptedUrlCharacters"), MaxLen.AccountUrl)"
		  data-original-title="@String.Format(Context.Translate("AcceptedUrlCharacters"), MaxLen.AccountUrl)">
	</span>

	@Html.TextBoxFor(m => m.Account.Url, new { maxlength = MaxLen.AccountUrl, @class = "form-control suggest-target" })
	<small class="control-label">@String.Format(Context.Translate("CharactersMax"), MaxLen.AccountUrl)</small>
</div>

<div class="form-group text-center">
	@Html.CheckBoxFor(m => m.HasLimit, new { @class = "check-toggle", data_to_enable = ".limit" })
	@Html.LabelFor(m => m.HasLimit, Context.Translate("AccountHasLimit"), new { @class = "control-label" })
	<span
		class="glyphicon glyphicon-info-sign"
		data-toggle="tooltip" data-placement="right"
		data-original-title="@Context.Translate("LimitExplanation")"
	></span>

	<br />
	@Context.Translate("GreenLimit") =
	(
		<span
			class="@Html.Partial("AccountSign", AccountSign.Green)"
			title="@Context.Translate("GreenLimit")"
		></span>
	)
	//
	@Context.Translate("NoneLimit") =
	(
		<span
			class="@Html.Partial("AccountSign", AccountSign.None)"
			title="@Context.Translate("NoneLimit")"
		></span>
	)
</div>

<div class="form-group">
	@Html.LabelFor(m => m.Account.YellowLimit, Context.Translate("YellowLimit"), new { @class = "control-label" })
	(
		<span
			class="@Html.Partial("AccountSign", AccountSign.Yellow)"
			title="@Context.Translate("YellowLimit")">
		</span>
	)
	@Html.TextBoxFor(m => m.Account.YellowLimit, new { @class = "form-control limit number", data_allow_negative = 1, data_allow_zero = 1 })
</div>

<div class="form-group">
	@Html.LabelFor(m => m.Account.RedLimit, Context.Translate("RedLimit"), new { @class = "control-label" })
	(
		<span
			class="@Html.Partial("AccountSign", AccountSign.Red)"
			title="@Context.Translate("RedLimit")">
		</span>
	)
	@Html.TextBoxFor(m => m.Account.RedLimit, new { @class = "form-control limit number", data_allow_negative = 1, data_allow_zero = 1 })
</div>

@section Footer {
	<button class="btn btn-success" type="submit">
		@Context.Translate(Model.ActionName)
	</button>
}

@model BaseAccountModel

@{
	var defaultRoute = new Default.Main();
	var home = Url.RouteUrl(
		defaultRoute.Name,
		new
		{
			action = "Index",
			controller = "Accounts",
			area = defaultRoute.Area
		}
	);

	const String menuHL = " wl-other-color";
	var moveClass = ViewBag.MoveMenuClass + menuHL;
	var scheduleClass = ViewBag.ScheduleMenuClass + menuHL;
	var categoriesClass = ViewBag.CategoriesMenuClass + menuHL;
	var extractClass = ViewBag.ExtractMenuClass + menuHL;
	var summaryClass = ViewBag.SummaryMenuClass + menuHL;
	var homeClass = ViewBag.HomeMenuClass + menuHL;
}

@if (Model.Account.IsOpen)
{
	<li>
		@Html.ActionLink(
			Context.Translate("ToMove"),
			"Create", "Moves",
			null, new { @class = moveClass }
		)
	</li>
	<li>
		@Html.ActionLink(
			Context.Translate("Schedule"),
			"Create", "Schedules",
			null, new { @class = scheduleClass }
		)
	</li>
}

<li class="dropdown">
	<a class="dropdown-toggle @moveClass hide-whl-after-click" data-toggle="dropdown" role="button">
		@Context.Translate("Reports")
	</a>

	<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
		<li>
			@Html.ActionLink(
				Context.Translate("MonthMoves"),
				"Month", "Reports",
				null, new { @class = $"text-right {extractClass}" }
			)
		</li>

		<li>
			@Html.ActionLink(
				Context.Translate("YearMoves"),
				"Year", "Reports",
				null, new { @class = $"text-right {summaryClass}" }
			)
		</li>

		@if (Model.IsUsingCategories)
		{
			<li>
				@Html.ActionLink(
					Context.Translate("CategorySummary"),
					"Categories", "Reports",
					null, new { @class = $"text-right {categoriesClass}" }
				)
			</li>
		}
	</ul>
</li>

<li>
	<a href="@home" class="@homeClass">
		<span class="glyphicon glyphicon-home" title="@Context.Translate("Home")"></span>
	</a>
</li>

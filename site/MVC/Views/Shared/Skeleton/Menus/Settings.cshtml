@model BaseSiteModel

@{
	var settingsRoute = new Default.Main();

	String hlClass(dynamic viewBag)
	{
		if (viewBag == null) return null;
		return viewBag + " wl-other-color";
	}

	var settingsClass = hlClass(ViewBag.SettingsMenuClass);
	var settingsMainClass = hlClass(ViewBag.SettingsMainMenuClass);
	var settingsEmailClass = hlClass(ViewBag.SettingsEmailMenuClass);
	var settingsPasswordClass = hlClass(ViewBag.SettingsPasswordMenuClass);
	var settingsTFAClass = hlClass(ViewBag.SettingsTFAMenuClass);
	var settingsThemeClass = hlClass(ViewBag.SettingsThemeMenuClass);
	var settingsMiscClass = hlClass(ViewBag.SettingsMiscMenuClass);
	var settingsWipeClass = hlClass(ViewBag.SettingsWipeMenuClass);
}

<li class="dropdown" id="settings">
	<a class="dropdown-toggle @settingsClass hide-whl-after-click" data-toggle="dropdown" role="button">
		<span class="glyphicon glyphicon-cog" title="@Context.Translate("Settings")"></span>
	</a>

	<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
		<li id="settings_main">
			@settingsRoute.MakeUrl(
				Html,
				Context.Translate("MainSettings"),
				"Index", "Settings",
				new { @class = "text-right " + settingsMainClass }
			)
		</li>

		<li id="settings_email">
			@settingsRoute.MakeUrl(
				Html,
				Context.Translate("EmailSettings"),
				"Email", "Settings",
				new { @class = "text-right " + settingsEmailClass }
			)
		</li>

		<li id="settings_password">
			@settingsRoute.MakeUrl(
				Html,
				Context.Translate("PasswordSettings"),
				"Password", "Settings",
				new { @class = "text-right " + settingsPasswordClass }
			)
		</li>

		<li id="settings_tfa">
			@settingsRoute.MakeUrl(
				Html,
				Context.Translate("TFASettings"),
				"TFA", "Settings",
				new { @class = "text-right " + settingsTFAClass }
			)
		</li>

		<li id="settings_theme">
			@settingsRoute.MakeUrl(
				Html,
				Context.Translate("ThemeSettings"),
				"Theme", "Settings",
				new { @class = "text-right " + settingsThemeClass }
			)
		</li>

		<li id="settings_misc">
			@settingsRoute.MakeUrl(
				Html,
				Context.Translate("MiscSettings"),
				"Misc", "Settings",
				new { @class = "text-right " + settingsMiscClass }
			)
		</li>

		<li id="settings_wipe">
			@settingsRoute.MakeUrl(
				Html,
				Context.Translate("WipeSettings"),
				"Wipe", "Settings",
				new { @class = "text-right " + settingsWipeClass }
			)
		</li>
	</ul>
</li>

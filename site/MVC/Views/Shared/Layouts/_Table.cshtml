
@model BaseSiteModel

@{
	Layout = "_Base.cshtml";

	ViewBag.WizardSuffix =
		ViewBag.HasContent
			? "Filled"
			: "Empty";

	var buttonList = (List<Button>)ViewBag.Buttons;
}

@await Html.PartialAsync("Skeleton/ValidationSummary")

<h1 class="header">
	<span class="@ViewBag.TitleClass">
		@ViewBag.Title
	</span>
	<em>
		@ViewBag.Subtitle
	</em>
</h1>
<hr />

@if (!ViewBag.HasContent)
{
	<div class="well text-center @ViewBag.NoContentClass">
		<p>
			@ViewBag.NoContentText
		</p>

		@if (buttonList != null)
		{
			<div id="table-buttons" class="text-center">
				@foreach (var button in buttonList.OrderByDescending(b => b.PullLeft))
				{
					if (!String.IsNullOrEmpty(button.Action))
					{
						@Html.ActionLink(
							button.Text,
							button.Action,
							button.Controller,
							null,
							new {@class = "btn btn-info btn-sm " + button.Class}
						)
					}
					else
					{
						<a href="~/Assets/@button.Asset" class="btn btn-info btn-sm @button.Class">
							@button.Text
						</a>
					}
				}
			</div>
		}
	</div>

	@* No, it shouldn't be here *@
	<div class="hidden">
		@await RenderSectionAsync("TableHeader", false)
	</div>
}
else
{
	var tableLgSize = ViewBag.TableLgSize ?? 12;
	if (tableLgSize % 2 == 1) { tableLgSize++; }
	var pushLg = 6 - tableLgSize / 2;

	var tableSmSize = ViewBag.TableSmSize ?? 12;
	if (tableSmSize % 2 == 1) { tableSmSize++; }
	var pushSm = 6 - tableSmSize / 2;

	<div class="row">
		<div class="col-lg-@tableLgSize col-lg-push-@pushLg col-sm-@tableSmSize col-sm-push-@pushSm">

			<div class="well-sm">

				<table class="table table-striped table-hover table-responsive @ViewBag.TableClass">
					<thead>
						@await RenderSectionAsync("TableHeader", false)
					</thead>
					<tbody>
						@RenderBody()
					</tbody>
				</table>

			</div>

		</div>
	</div>

	if (buttonList != null)
	{
		<div id="table-buttons" class="text-right">
			@foreach (var button in buttonList)
			{
				var classes = "btn btn-info "
					+ (button.PullLeft ? "pull-left " : null)
					+ button.Class;

				if (!String.IsNullOrEmpty(button.Action))
				{
					@Html.ActionLink(
						button.Text,
						button.Action,
						button.Controller,
						null,
						new { @class = classes }
					)
				}
				else
				{
					<a href="~/Assets/@button.Asset" class="@classes">
						@button.Text
					</a>
				}

			}
		</div>
	}
}

@await RenderSectionAsync("Footer", false)

@section Styles
{
	@await RenderSectionAsync("Styles", false)
}

@section Scripts
{
	@await RenderSectionAsync("Scripts", false)
}

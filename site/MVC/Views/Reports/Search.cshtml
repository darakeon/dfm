@model ReportsSearchModel

@{
	ViewBag.Title = Context.Translate("Search_For")
		.Format(Model.Terms);

	var anyMoves = Model.MoveList.Any();

	var hl = new WizardHL(anyMoves)
		.AddBox("Content", 0, null)
		.AddBox("Report", 1, null)
		.AddBox("Edit", 2, null)
		.AddBox("Delete", 2, null)
		.AddBox("NoContent", null, 1)
		.AddBox("SearchMenu", null, 2)
		.AddBox("StopButton", 6, null)
		;

	ViewBag.TableClass = hl["Content"];
	ViewBag.NoContentClass = hl["NoContent"];

	ViewBag.HasContent = anyMoves;
	ViewBag.NoContentText = String.Format(
		Context.Translate("Search_Empty"),
		Model.Terms
	);

	ViewBag.SearchMenuClass = hl["SearchMenu"];
	ViewBag.StopButtonClass = hl["StopButton"];

	Layout = "~/Views/Shared/Layouts/_Table.cshtml";
}

@section TableHeader
{
	@{ var descriptionSize = 3 + (Model.IsUsingCategories ? 0 : 2); }

	<tr class="row">
		<th class="col-sm-@descriptionSize">
			@Context.Translate("Description")
		</th>

		@if (Model.IsUsingCategories)
		{
			<th class="col-sm-2 text-center">
				@Context.Translate("Category")
			</th>
		}

		<th class="col-sm-2 text-center">
			@Context.Translate("Date")
		</th>

		<th class="col-sm-2 text-center">
			@Context.Translate("Value")
		</th>

		<th class="col-sm-3 text-center" colspan="3">
			@Context.Translate("TODO")
		</th>
	</tr>
}

@foreach (var move in Model.MoveList)
{
	var route = new Accounts();

	var accountUrl = move.OutUrl ?? move.InUrl;
	var accountName = move.OutName ?? move.InName;

	var reportRoute = new
	{
		area = route.Area,
		accountUrl,
		controller = "Reports",
		action = "Month",
		id = move.Year * 100 + move.Month
	};

	var reportTitle = Context.Translate("GoToReport")
		.Format(accountName, move.Month, move.Year);

	var editRoute = new
	{
		area = route.Area,
		accountUrl,
		controller = "Moves",
		action = "Edit",
		id = move.Guid
	};

	var editTitle = $"{Context.Translate("Edit")} {move.Description}";

	<tr class="row" id="m@(move.Guid)">
		<td>@move.Description</td>

		@if (Model.IsUsingCategories)
		{
			<td class="text-center">
				@(move.CategoryName ?? "---")
			</td>
		}

		<td class="text-center">
			@move.GetDate().ToShortDateString()
		</td>

		<td class="text-right">
			@await Html.PartialAsync(
				"Extensions/ValueWithSign",
				new ValueWithSign(move.Value, move.Nature, Model.Language)
			)
		</td>

		<td class="text-center @hl["Report"]">
			<a href="@Url.RouteUrl(route.Name, reportRoute)" title="@reportTitle">
				<span class="glyphicon glyphicon-th-list"
					title="@reportTitle"
					role='button'>
				</span>
			</a>
		</td>

		<td class="text-center @hl["Edit"]">
			<a href="@Url.RouteUrl(route.Name, editRoute)" title="@editTitle">
				<span class="glyphicon glyphicon-pencil"
					title="@editTitle"
					role='button'>
				</span>
			</a>
		</td>

		<td class="text-center @hl["Delete"]">
			@await Html.PartialAsync(
				"Extensions/MicroForm",
				MicroForm.WithGlyph(Context, "trash", "Delete")
					.AddRouteIdUrl(route.Name, route.Area, "Moves", "Delete", move.Guid)
					.EntityName(move.Description)
			)
		</td>
	</tr>
}

@model SettingsTFAModel
@{
	ViewBag.Title = Context.Translate("TFASettings");
	Layout = "~/Views/Shared/Layouts/_Form.cshtml";

	ViewBag.FormSizeSm = 8;
	ViewBag.FormSizeLg = 6;

	var hl = new WizardHL()
		.AddBox("Why", 2)
		.AddBox("Settings", 3)
		.AddBox("SettingsTheme", 3)
		;

	ViewBag.SettingsMenuClass = hl["Settings"];
	ViewBag.SettingsThemeMenuClass = hl["SettingsTheme"];
}

@section Styles {
	<link rel="stylesheet" type="text/css" href="~/Assets/styles/qrcode.css?v=@Cfg.Version" />
}

@section Scripts {
	<script type="text/javascript" src="~/Assets/libs/jquery/jquery.qrcode.min.js?v=@Cfg.Version"></script>
	<script type="text/javascript" src="~/Assets/scripts/qrcode.js?v=@Cfg.Version"></script>
}

@Html.HiddenFor(m => m.IsActive)

@if (Model.IsActive)
{
	<div class="form-group">
		@Html.LabelFor(m => m.TFA.Password, Context.Translate("CurrentPassword"), new { @class = "control-label" })
		@Html.PasswordFor(m => m.TFA.Password, new { @class = "form-control" })
	</div>
}
else
{
	<div class="text-center">
		<span id="qrcode" data-url="@Model.UrlPath">
		</span>

		@Html.HiddenFor(m => m.TFA.Secret)

		<br/>
		<small class="@hl["Why"]">
			<a href="#" role='button' data-toggle='modal' data-target='#tfa-modal'>
				@Context.Translate("TFAWhy")
			</a>
		</small>
	</div>

	<div class="form-group">
		@Html.LabelFor(m => m.TFA.Code, Context.Translate("Code"), new { @class = "control-label" })
		@Html.TextBoxFor(m => m.TFA.Code, new { @class = "form-control" })
	</div>

	<div class="form-group">
		@Html.LabelFor(m => m.TFA.Password, Context.Translate("CurrentPassword"), new { @class = "control-label" })
		@Html.PasswordFor(m => m.TFA.Password, new { @class = "form-control" })
	</div>
}

@await Html.PartialAsync("Modals/TFA")

@section Footer {
	@{
		var button = "Save";
	}

	@if (Model.IsActive)
	{
		button = "TFARemove";

		var action = Model.TFAPassword
			? "TFAPasswordDisable"
			: "TFAPasswordEnable";

		<small>
			<a class="pull-left text-left"
					href="@Url.Action(action, "Settings")">
				@Html.Raw(Context.Translate(action).Replace("\n", "<br />"))
			</a>
		</small>
	}

	<button type="submit"
			class="btn btn-success tab-submit">
		@Context.Translate(button)
	</button>
}

@using System.Text.RegularExpressions
@model TestAnalyzeDictionaryModel

@{
	ViewBag.Title = "Analyze Dictionary";
	var phrases = new List<String>();
}

@foreach (var dic in Model.Dics)
{
	foreach (var section in dic.SectionList)
	{
		var data = new Dictionary<String, Dictionary<String, String>>();
		var size = (100 - 15) / section.LanguageList.Count;

		<h3>@(section.Name.ToUpper())</h3>

		<table class="table table-striped table-hover table-responsive">
			<thead>
				<tr>
					<th style="width: 15%"></th>

					@foreach (var language in section.LanguageList)
					{
						<th style="width: @size%">@language.Name</th>

						foreach (var phrase in language.PhraseList)
						{
							var phraseName = Regex.Replace(phrase.Name, "([A-Z])", " $1");

							if (!data.ContainsKey(phraseName))
							{
								data.Add(phraseName, new Dictionary<String, String>());
							}

							data[phraseName].Add(language.Name, phrase.Text);
						}
					}

				</tr>
			</thead>

			<tbody>
				@foreach (var phrase in data)
				{
					<tr>
						<td>
							@phrase.Key
						</td>

						@foreach (var language in phrase.Value)
						{
							var key = phrase.Key + "_" + language.Key;

							<td class="@(phrases.Contains(key) ? "text-danger" : "")">
								@language.Value
							</td>

							phrases.Add(key);
						}

					</tr>
				}
			</tbody>
		</table>
	}
}

@model ReportsYearModel

@{
	ViewBag.Title = Model.Date;
	Layout = "~/Views/Shared/Layouts/_Table.cshtml";

	var monthList = Model.Year.MonthList
		.OrderBy(m => m.Number)
		.ToList();

	var hasMonths = monthList.Any(
		m => m.CurrentIn != 0 || m.CurrentOut != 0
		     || m.ForeseenIn != 0 || m.ForeseenOut != 0
	);

	ViewBag.HasContent = hasMonths;

	ViewBag.NoContentText = Context.Translate("NoYearMoves");
	ViewBag.TableLgSize = 8;
	ViewBag.TableSmSize = 10;
	ViewBag.TableClass = "wizard-highlight-0";
	ViewBag.NoContentClass = "wizard-highlight-0";

	ViewBag.CategoriesMenuClass =
		hasMonths
			? "wizard-highlight-4"
			: "wizard-highlight-3";

	var start = Model.Account.Start;
	var date = new DateTime(Model.Year.Time, 1, 1);
	var end = Model.Account.End ??
	    (date < start ? start : date).AddYears(4);

	var startPage = new YearUnit(start);
	var endPage = new YearUnit(end);
	var currentPage = new YearUnit(date);

	var pages = new Pages(startPage, endPage, currentPage, 5);
}

@section TableHeader{
	<tr class="row">
		<th class="text-center" rowspan="2">
			@Context.Translate("Month")
		</th>
		<th class="text-center" colspan="3">
			@Context.Translate("Current")
		</th>
		<th class="text-center foreseen" colspan="3">
			@Context.Translate("Foreseen")
		</th>
	</tr>
	<tr class="row">
		<th class="text-center">
			@Context.Translate("In")
		</th>
		<th class="text-center">
			@Context.Translate("Out")
		</th>
		<th class="text-center">
			@Context.Translate("Total")
		</th>
		<th class="text-center foreseen">
			@Context.Translate("In")
		</th>
		<th class="text-center foreseen">
			@Context.Translate("Out")
		</th>
		<th class="text-center foreseen">
			@Context.Translate("Total")
		</th>
	</tr>
}

@foreach (var month in monthList)
{
	var currentIn = new ValueWithSign(month.CurrentIn, Model.Language, true);
	var currentOut = new ValueWithSign(-month.CurrentOut, Model.Language, true);
	var currentTotal = new ValueWithSign(month.CurrentTotal, Model.Language);

	var foreseenIn = new ValueWithSign(month.ForeseenIn, Model.Language, true);
	var foreseenOut = new ValueWithSign(-month.ForeseenOut, Model.Language, true);
	var foreseenTotal = new ValueWithSign(month.ForeseenTotal, Model.Language);

	<tr class="row">
		<td>
			<a href="@Url.Action("Month", new {id = month.Number})">
				@Context.GetMonthName(month.Number % 100)
			</a>
		</td>
		<td class="text-right">
			@await Html.PartialAsync("Extensions/ValueWithSign", currentIn)
		</td>
		<td class="text-right">
			@await Html.PartialAsync("Extensions/ValueWithSign", currentOut)
		</td>
		<td class="text-right">
			@await Html.PartialAsync("Extensions/ValueWithSign", currentTotal)
		</td>
		<td class="text-right foreseen">
			@await Html.PartialAsync("Extensions/ValueWithSign", foreseenIn)
		</td>
		<td class="text-right foreseen">
			@await Html.PartialAsync("Extensions/ValueWithSign", foreseenOut)
		</td>
		<td class="text-right foreseen">
			@await Html.PartialAsync("Extensions/ValueWithSign", foreseenTotal)
		</td>
	</tr>
}

@{
	var yearCurrentIn = new ValueWithSign(Model.Year.CurrentIn, Model.Language, true);
	var yearCurrentOut = new ValueWithSign(-Model.Year.CurrentOut, Model.Language, true);
	var yearCurrentTotal = new ValueWithSign(Model.Year.CurrentTotal, Model.Language);

	var yearForeseenIn = new ValueWithSign(Model.Year.ForeseenIn, Model.Language, true);
	var yearForeseenOut = new ValueWithSign(-Model.Year.ForeseenOut, Model.Language, true);
	var yearForeseenTotal = new ValueWithSign(Model.Year.ForeseenTotal, Model.Language);

	<tr class="row">
		<td>
			@Model.Year.Time
		</td>
		<td class="text-right">
			@await Html.PartialAsync("Extensions/ValueWithSign", yearCurrentIn)
		</td>
		<td class="text-right">
			@await Html.PartialAsync("Extensions/ValueWithSign", yearCurrentOut)
		</td>
		<td class="text-right">
			@await Html.PartialAsync("Extensions/ValueWithSign", yearCurrentTotal)
		</td>
		<td class="text-right foreseen">
			@await Html.PartialAsync("Extensions/ValueWithSign", yearForeseenIn)
		</td>
		<td class="text-right foreseen">
			@await Html.PartialAsync("Extensions/ValueWithSign", yearForeseenOut)
		</td>
		<td class="text-right foreseen">
			@await Html.PartialAsync("Extensions/ValueWithSign", yearForeseenTotal)
		</td>
	</tr>
}

@section Footer {
	@{
		var paginationClass =
			hasMonths
				? "wizard-highlight-2"
				: "wizard-highlight-1";

		var totalClass =
			hasMonths
				? "wizard-highlight-3"
				: "wizard-highlight-2";
	}
	<div class="row">
		<div class="col-lg-2 col-sm-2"></div>

		<div class="col-lg-8 col-sm-8 text-center @paginationClass">
			@await Html.PartialAsync("Extensions/Pagination", pages)
		</div>

		<div class="col-lg-2 col-sm-2 @totalClass">
			@await Html.PartialAsync("Total")
		</div>
	</div>
}

@section Styles {
	<link type="text/css" rel="stylesheet"
		href="~/Assets/styles/reports.css?v=@Cfg.Version" />
}

@using System.Globalization
@model ReportsCategoriesModel

@{
	ViewBag.Title = Model.Date;
	Layout = "~/Views/Shared/Layouts/_Clean.cshtml";

	var drawCharts = Model.ChartData.Any();

	ViewBag.HasContent = drawCharts;
	
	ViewBag.NoContentText = 
		Model.SummaryNature == SummaryNature.Year
			? Context.Translate("NoYearMoves")
			: Context.Translate("NoMonthMoves");

	ViewBag.SmSize = 12;
	ViewBag.LgSize = 10;

	Pages pages;

	if (Model.Month.HasValue)
	{
		var start = Model.Account.Start;
		var date = new DateTime(Model.Year, Model.Month.Value, 1);
		var end = Model.Account.End ??
		          (date < start ? start : date).AddMonths(4);

		var startPage = new MonthYearUnit(start);
		var endPage = new MonthYearUnit(end);
		var currentPage = new MonthYearUnit(date);

		pages = new Pages(startPage, endPage, currentPage, 5);
	}
	else
	{
		var start = Model.Account.Start;
		var date = new DateTime(Model.Year, 1, 1);
		var end = Model.Account.End ??
		          (date < start ? start : date).AddYears(4);

		var startPage = new YearUnit(start);
		var endPage = new YearUnit(end);
		var currentPage = new YearUnit(date);

		pages = new Pages(startPage, endPage, currentPage, 5);
	}

	var jsFormat = new NumberFormatInfo
	{
		NumberDecimalSeparator = "."
	};

	var culture = new CultureInfo(Model.Language);
	var format = culture.NumberFormat;
	var thousands = format.CurrencyGroupSeparator;
	var decimals = format.CurrencyDecimalSeparator;

	var theme = Model.Theme.Brightness().ToLower();

	var hl = new WizardHL()
		.AddBox("Title", 1)
		.AddBox("Accessibility", 2)
		.AddBox("Out", 3)
		.AddBox("In", 4)
		.AddBox("Pagination", 5)
		.AddBox("Settings", 6)
		.AddBox("SettingsMain", 6)
	;

	ViewBag.TitleClass = hl["Title"];

	ViewBag.SettingsMenuClass = hl["Settings"];
	ViewBag.SettingsMainMenuClass = hl["SettingsMain"];
}

<div class="text-center">
	<label id="patterns-enabled-label" class="@hl["Accessibility"]">
		<input type="checkbox" id="patterns-enabled">
		@Context.Translate("EnableColorPatterns")
	</label>
</div>

<div class="row clearfix">
	<div class="col-sm-6 @hl["Out"]">
		<figure class="highcharts-figure">
			<div id="container-out"></div>
		</figure>
	</div>
	<div class="col-sm-6 @hl["In"]">
		<figure class="highcharts-figure">
			<div id="container-in"></div>
		</figure>
	</div>
</div>

@section Footer {
	<div class="row">
		<div class="col-lg-2 col-sm-2"></div>

		<div class="col-lg-8 col-sm-8 text-center @hl["Pagination"]">
			@await Html.PartialAsync("Extensions/Pagination", pages)
		</div>
	</div>
}

@section Scripts {
	@if (drawCharts)
	{
		<script type="text/javascript" src="~/Assets/libs/highcharts/highcharts.js"></script>
		<script type="text/javascript" src="~/Assets/libs/highcharts/modules/exporting.js"></script>
		<script type="text/javascript" src="~/Assets/libs/highcharts/modules/export-data.js"></script>
		<script type="text/javascript" src="~/Assets/libs/highcharts/modules/accessibility.js"></script>
		<script type="text/javascript" src="~/Assets/libs/highcharts/modules/pattern-fill.js"></script>
		<script type="text/javascript" src="~/Assets/libs/highcharts/themes/high-contrast-@(theme).js"></script>

		<script type="text/javascript" src="~/Assets/scripts/chart.js?v=@Cfg.Version"></script>

		<script type="text/javascript">
			$(document).ready(function () {
				chart.init('@decimals', '@thousands')

				chart.draw(
					'container-out',
					'@Context.Translate("Out")',
					'@Context.Translate("Value")',
					[
						@foreach (var data in Model.ChartDataOut)
						{
							@Html.Raw($"{{ name: '{data.Category}', y: {data.Out.ToString(jsFormat)} }},")
						}
					]
				)

				chart.draw(
					'container-in',
					'@Context.Translate("In")',
					'@Context.Translate("Value")',
					[
						@foreach (var data in Model.ChartDataIn)
						{
							@Html.Raw($"{{ name: '{data.Category}', y: {data.In.ToString(jsFormat)} }},")
						}
					]
				)
			})
		</script>

	}
}

@section Styles {
	<link type="text/css" rel="stylesheet" href="~/Assets/styles/chart.css??v=@Cfg.Version" />
}

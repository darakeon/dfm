@using Newtonsoft.Json
@model BaseMovesModel

@{
	ViewBag.Title = Context.Translate(Model.ActionName, Model.ControllerName);
	Layout = "~/Views/Shared/Layouts/_Form.cshtml";
	ViewBag.FormSizeSm = 10;
	ViewBag.FormSizeLg = 6;

	ViewBag.TitleClass = "wizard-scroll-6";

	var categoriesWizard =
		Model.Type != OperationType.Scheduling
			&& Model.IsUsingCategories;

	var moveCheckWizard =
		Model.Type == OperationType.Creation
			&& Model.IsUsingMoveCheck;

	var currencyWizard =
		Model.Type == OperationType.Creation
			&& Model.IsUsingCurrency;

	if (currencyWizard)
	{
		ViewBag.WizardPlus = "Currency"; // MovesCreate
	}
	else if (moveCheckWizard)
	{
		ViewBag.WizardPlus = "Check"; // MovesCreate
	}
	else if (categoriesWizard)
	{
		ViewBag.WizardPlus = "Category"; // MovesCreate,MovesEdit
	}

	Model.HL = new WizardHL(
		currencyWizard,
		moveCheckWizard,
		categoriesWizard,
		Model.Type == OperationType.Creation,
		Model.Type == OperationType.Edition,
		Model.Type == OperationType.Scheduling 
	)
		.AddBox("Button", null, null, null, 5, null, 5, null)
		.AddBox("Installment", null, null, null, null, null, 4, null)
		.AddBox("Frequency", null, null, null, null, null, 1, null)
		.AddBox("Boundless", null, null, null, null, null, 3, null)
		.AddBox("Times", null, null, null, null, null, 2, null)
		.AddBox("DetailTab", null, null, null, 4, null, null, null)
		.AddBox("Description", null, null, null, 1, null, null, null)
		.AddBox("Date", null, null, null, 2, null, null, null)
		.AddBox("Value", null, null, null, 3, null, null, null)
		.AddBox("Category", null, null, 0, null, null, null, null)
		.AddBox("Reports", null, null, null, null, 2, null, null)
		.AddBox("Nature", 0, null, null, null, null, null, null)
		.AddBox("AccountIn", 1, null, null, null, null, null, null)
		.AddBox("AccountOut", 1, null, null, null, null, null, null)
		.AddBox("Conversion", 2, null, null, null, null, null, null)
		.AddBox("SettingsMenuClass", 5, null, null, null, null, null, null)
		.AddBox("SettingsEmailMenuClass", 5, null, null, null, null, null, null)
		;

	ViewBag.ExtractMenuClass = Model.HL["Reports"];
	ViewBag.SettingsMenuClass = Model.HL["SettingsMenuClass"];
	ViewBag.SettingsEmailMenuClass = Model.HL["SettingsEmailMenuClass"];
}

@if (Model.BlockScreen)
{
	@await Html.PartialAsync("BlockedFormContent")
	@section Footer { @await Html.PartialAsync("BlockedFormFooter") }
}
else
{
	@section Scripts {
		<script src="~/Assets/scripts/toggle.js?v=@Cfg.Version" type="text/javascript"></script>
		<script src="~/Assets/scripts/move-crud.js?v=@Cfg.Version" type="text/javascript"></script>
		<script type="text/javascript">
			const accountCurrencies = @Html.Raw(JsonConvert.SerializeObject(Model.AccountCurrencies))
		</script>
	}

	if (Model.ShowLosingCategory)
	{
		<div class="alert alert-info text-center">
			@Html.Raw(Context.Translate("MoveLosingCategory").BreakLines())
		</div>
	}

	if (Model.ShowRemoveCheck)
	{
		<div class="alert alert-info text-center">
			@Html.Raw(Context.Translate("MoveRemoveCheck").BreakLines())
		</div>
	}

	@await Html.PartialAsync("ScheduleFields")

	@await Html.PartialAsync("MoveMainData")

	<hr />

	@await Html.PartialAsync("NatureAndAccount")

	<hr />

	@await Html.PartialAsync("ValueAndDetail")

	@section Footer {
		<div class="row">
			<div class="col-lg-9 text-left small">
				@Context.Translate("NoLinkReminder1")<br/>
				@Context.Translate("NoLinkReminder2")<br/>
				@Context.Translate("NoLinkReminder3")
			</div>
			<div class="col-lg-3">
				<button type="submit" class="btn btn-success @Model.HL["Button"]">
					@Context.Translate(Model.ActionName)
				</button>
			</div>
		</div>
	}
}

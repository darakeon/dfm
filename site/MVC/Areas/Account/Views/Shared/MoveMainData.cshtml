@model BaseMovesModel

@{
	var useCategories = Context.GetService().Current.UseCategories;
	var rowWidths = useCategories ? 6 : 12;
}

<div class="form-group">
	@Html.LabelFor(m => m.Description, Context.Translate("Description"), new { @class = "control-label" })
	@Html.ValidationMessageFor(m => m.Description)<br />
	@Html.TextBoxFor(m => m.Description, new { maxlength = MaxLen.MoveDescription, @class = "form-control wizard-highlight-1" })
	<small>@String.Format(Context.Translate("CharactersMax"), MaxLen.MoveDescription)</small>
</div>

<div class="row">
	<div class="col-sm-@(rowWidths) form-group">
		@Html.LabelFor(m => m.Date, Context.Translate("Date"), new { @class = "control-label" })
		@Html.ValidationMessageFor(m => m.Date)<br />
		@Html.TextBoxFor(m => m.Date, new { type = "date", @class = "form-control wizard-highlight-1" })
	</div>

	@if (useCategories)
	{
		<div class="col-sm-@(rowWidths) form-group">
			@Html.LabelFor(m => m.CategoryName, Context.Translate("Category"), new {@class = "control-label"})
			@Html.ValidationMessageFor(m => m.CategoryName)<br/>
			@Html.DropDownListFor(m => m.CategoryName, Model.CategorySelectList, "-- " + Context.Translate("Select") + " --", new {@class = "form-control"})
		</div>
	}
</div>

@model BaseMovesModel

@{
	var natureUiList = new List<BaseMovesModel.NatureUI>
	{
		new(MoveNature.Out, ".combo-account-out", ".combo-account-in"),
		new(MoveNature.Transfer, ".combo-account-out, .combo-account-in"),
		new(MoveNature.In, ".combo-account-in", ".combo-account-out")
	};
}

@Html.HiddenFor(m => m.Nature)

<div class="row">

	<div class="col-sm-4 btn-group-vertical btn-group-sm">
		@foreach (var natureUI in natureUiList)
		{
			var nature = await Html.PartialAsync("Extensions/NatureColor", natureUI.Nature);

			<button type="button"
				id="Nature_@natureUI.Nature"
				class="btn btn-sm btn-@nature btn-glyph
					col-sm-4 button-toggle value-setter
					@(Model.Nature == natureUI.Nature ? "active" : null)"
				data-to-enable="@natureUI.Enable"
				data-to-disable="@natureUI.Disable"
				data-target-id="@Html.IdFor(m => m.Nature)"
				data-target-value="@natureUI.Nature"
				title="@Context.Translate(natureUI.Nature.ToString())"
			>

				<span class="pull-left">
					@Context.Translate(natureUI.Nature.ToString())
				</span>

				<span class="pull-right">
					<span
						class="@await Html.PartialAsync("Extensions/NatureIcon", natureUI.Nature)"
					></span>
				</span>

			</button>
		}
	</div>

	<div class="col-sm-4 form-group side-vertical-button">
		@Html.LabelFor(m => m.AccountInUrl, Context.Translate("Account", "In"), new { @class = "control-label" })
		<span
			class="@await Html.PartialAsync("Extensions/NatureIcon", MoveNature.In)"
			title="@Context.Translate(MoveNature.In.ToString())"
		></span>

		@Html.DropDownListFor(
			m => m.AccountInUrl,
			Model.AccountInSelectList,
			"-- " + Context.Translate("Select") + " --",
			new { @class = "form-control combo-account combo-account-in alert-info" }
		)

		@Html.ValidationMessageFor(m => m.AccountInUrl)
	</div>

	<div class="col-sm-4 form-group side-vertical-button">
		@Html.LabelFor(m => m.AccountOutUrl, Context.Translate("Account", "Out"), new { @class = "control-label" })
		<span
			class="@await Html.PartialAsync("Extensions/NatureIcon", MoveNature.Out)"
			title="@Context.Translate(MoveNature.Out.ToString())"
		></span>

		@Html.DropDownListFor(
			m => m.AccountOutUrl,
			Model.AccountOutSelectList,
			"-- " + Context.Translate("Select") + " --",
			new { @class = "form-control combo-account combo-account-out alert-danger" }
		)

		@Html.ValidationMessageFor(m => m.AccountOutUrl)
	</div>
</div>

{
	"info": {
		"_postman_id": "58b5bc68-79bf-4881-8a7f-a82c74facaaa",
		"name": "DFM",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16840310"
	},
	"item": [
		{
			"name": "Status",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tests Throw",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/tests/throw",
					"host": [
						"{{url}}"
					],
					"path": [
						"tests",
						"throw"
					]
				}
			},
			"response": []
		},
		{
			"name": "Log Count",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/log/count",
					"host": [
						"{{url}}"
					],
					"path": [
						"log",
						"count"
					]
				}
			},
			"response": []
		},
		{
			"name": "Log List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body has properties\", function () {\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json).to.have.property(\"data\");\r",
							"    pm.expect(json.data).to.have.property(\"logs\");\r",
							"\r",
							"    if (json.data.logs.length > 0) {\r",
							"        pm.collectionVariables.set(\"log_id\", json.data.logs[0].id);\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/log/list",
					"host": [
						"{{url}}"
					],
					"path": [
						"log",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "Log Archive",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/log/archive/{{log_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"log",
						"archive",
						"{{log_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Users Signup",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json()\r",
							"\r",
							"if (json.data) {\r",
							"    pm.collectionVariables.set(\"ticket\", json.data.ticket)\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var email_number = pm.collectionVariables.get(\"email_number\");\r",
							"email_number = (email_number * 1) + 1;\r",
							"pm.collectionVariables.set(\"email_number\", email_number);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Email\": \"{{test_user_email}}\",\r\n    \"Password\": \"{{test_user_password}}\",\r\n    \"AcceptedContract\": true,\r\n    \"Language\": \"pt-BR\",\r\n    \"Timezone\": \"UTC-03:00\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users/signup",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Users Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json()\r",
							"\r",
							"if (json.data) {\r",
							"    pm.collectionVariables.set(\"ticket\", json.data.ticket)\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "email",
							"value": "{{test_user_email}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{test_user_password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/users/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Users Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"ticket\", null)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/users/logout",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Users Settings",
			"protocolProfileBehavior": {
				"followRedirects": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users/getsettings",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"getsettings"
					]
				}
			},
			"response": []
		},
		{
			"name": "Users Settings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"UseCategories\": true,\r\n    \"MoveCheck\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users/savesettings",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"savesettings"
					]
				}
			},
			"response": []
		},
		{
			"name": "Users TFA",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "code",
							"value": "012345",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/users/tfa",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"tfa"
					]
				}
			},
			"response": []
		},
		{
			"name": "Users Wipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": \"{{test_user_password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users/wipe",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"wipe"
					]
				}
			},
			"response": []
		},
		{
			"name": "Users Terms",
			"protocolProfileBehavior": {
				"followRedirects": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users/terms",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"terms"
					]
				}
			},
			"response": []
		},
		{
			"name": "Accounts List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body has properties\", function () {\r",
							"    const json = pm.response.json();\r",
							"\r",
							"    pm.expect(json).to.have.property(\"data\");\r",
							"    pm.expect(json.data).to.have.property(\"accountList\");\r",
							"\r",
							"    if (json.data.accountList.length > 0) {\r",
							"        pm.collectionVariables.set(\"account_url\", json.data.accountList[0].url)\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/accounts/list",
					"host": [
						"{{url}}"
					],
					"path": [
						"accounts",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "Moves Extract",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body has properties\", function () {\r",
							"    const json = pm.response.json();\r",
							"\r",
							"    pm.expect(json).to.have.property(\"data\");\r",
							"    pm.expect(json.data).to.have.property(\"moveList\");\r",
							"\r",
							"    if (json.data.moveList.length > 0) {\r",
							"        pm.collectionVariables.set(\"move_id\", json.data.moveList[0].guid)\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/account-{{account_url}}/moves/extract/202311",
					"host": [
						"{{url}}"
					],
					"path": [
						"account-{{account_url}}",
						"moves",
						"extract",
						"202311"
					]
				}
			},
			"response": []
		},
		{
			"name": "Moves Summary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/account-{{account_url}}/moves/summary/2023",
					"host": [
						"{{url}}"
					],
					"path": [
						"account-{{account_url}}",
						"moves",
						"summary",
						"2023"
					]
				}
			},
			"response": []
		},
		{
			"name": "Moves Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/account-{{account_url}}/moves/create",
					"host": [
						"{{url}}"
					],
					"path": [
						"account-{{account_url}}",
						"moves",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Moves Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Description\": \"postman 2\",\r\n    \"Year\": 2023,\r\n    \"Month\": 11,\r\n    \"Day\": 16,\r\n    \"Nature\": 0,\r\n    \"Value\": 0,\r\n    \"DetailList\": [\r\n        {\r\n            \"Description\": \"Detail\",\r\n            \"Amount\": 2,\r\n            \"Value\": 3.00\r\n        }\r\n    ],\r\n    \"OutUrl\": \"{{account_url}}\",\r\n    \"InUrl\": null,\r\n    \"CategoryName\": \"{{category_name}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/account-{{account_url}}/moves/create",
					"host": [
						"{{url}}"
					],
					"path": [
						"account-{{account_url}}",
						"moves",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Moves Edit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/account-{{account_url}}/moves/create/{{move_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"account-{{account_url}}",
						"moves",
						"create",
						"{{move_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Moves Edit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Guid\": \"{{move_id}}\",\r\n    \"Description\": \"postman 3\",\r\n    \"Year\": 2024,\r\n    \"Month\": 2,\r\n    \"Day\": 16,\r\n    \"Nature\": 0,\r\n    \"Value\": 0,\r\n    \"DetailList\": [\r\n        {\r\n            \"Description\": \"Detail\",\r\n            \"Amount\": 2,\r\n            \"Value\": 3.00\r\n        }\r\n    ],\r\n    \"OutUrl\": \"{{account_url}}\",\r\n    \"InUrl\": null,\r\n    \"CategoryName\": \"{{category_name}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/account-{{account_url}}/moves/create",
					"host": [
						"{{url}}"
					],
					"path": [
						"account-{{account_url}}",
						"moves",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Moves Delete",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/moves/delete/{{move_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"moves",
						"delete",
						"{{move_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Moves Check",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "nature",
							"value": "0",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/moves/check/{{move_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"moves",
						"check",
						"{{move_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Moves Uncheck",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "nature",
							"value": "0",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/moves/uncheck/{{move_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"moves",
						"uncheck",
						"{{move_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Moves Lists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json()\r",
							"\r",
							"if (json.data) {\r",
							"    pm.collectionVariables.set(\"account_url\", json.data.accountList[0].value)\r",
							"    pm.collectionVariables.set(\"category_name\", json.data.categoryList[0].value)\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/moves/lists",
					"host": [
						"{{url}}"
					],
					"path": [
						"moves",
						"lists"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{ticket}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "ticket",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "",
			"type": "string"
		},
		{
			"key": "url_prd",
			"value": "https://dontflymoney.com",
			"type": "string"
		},
		{
			"key": "url_dev",
			"value": "http://localhost:2312",
			"type": "string"
		},
		{
			"key": "test_user_email",
			"value": "test{{email_number}}@dontflymoney.com",
			"type": "string"
		},
		{
			"key": "test_user_password",
			"value": "",
			"type": "string"
		},
		{
			"key": "ticket",
			"value": ""
		},
		{
			"key": "account_url",
			"value": ""
		},
		{
			"key": "category_name",
			"value": ""
		},
		{
			"key": "log_id",
			"value": ""
		},
		{
			"key": "move_id",
			"value": ""
		},
		{
			"key": "email_number",
			"value": "1",
			"type": "string"
		}
	]
}
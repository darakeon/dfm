  test_core:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - run:
          name: set_checksums
          command: |
            CS_AUTH=$(md5sum core/Authentication/Authentication.csproj | cut -d' ' -f1)
            CS_BUSI=$(md5sum core/BusinessLogic/BusinessLogic.csproj | cut -d' ' -f1)
            CS_MAIL=$(md5sum core/Email/Email.csproj | cut -d' ' -f1)
            CS_ENTI=$(md5sum core/Entities/Entities.csproj | cut -d' ' -f1)
            CS_GENE=$(md5sum core/Generic/Generic.csproj | cut -d' ' -f1)
            CS_LANG=$(md5sum core/Language/Language.csproj | cut -d' ' -f1)
            CS_EXCH=$(md5sum core/Exchange/Exchange.csproj | cut -d' ' -f1)
            CS_TBUS=$(md5sum core/Tests/BusinessLogic/BusinessLogic.Tests.csproj | cut -d' ' -f1)
            CS_TMAI=$(md5sum core/Tests/Email/Email.Tests.csproj | cut -d' ' -f1)
            CS_TLAN=$(md5sum core/Tests/Language/Language.Tests.csproj | cut -d' ' -f1)
            CS_TEXC=$(md5sum core/Tests/Exchange/Exchange.Tests.csproj | cut -d' ' -f1)
            CS_TGEN=$(md5sum core/Tests/Generic/Generic.Tests.csproj | cut -d' ' -f1)

            CACHE_KEY=$CS_AUTH-$CS_BUSI-$CS_MAIL-$CS_ENTI-$CS_GENE-$CS_LANG-$CS_EXCH
            CACHE_KEY=$CACHE_KEY-$CS_TBUS-$CS_TMAI-$CS_TLAN-$CS_TEXC-$CS_TGEN
            echo $CACHE_KEY > cache_key
      - restore_cache:
          keys:
            - 'dotnet-{{ checksum "cache_key" }}'
      - run:
          name: dependencies
          command: dotnet restore core/Core.sln
      - save_cache:
          key: 'dotnet-{{ checksum "cache_key" }}'
          paths:
            - ~/.nuget/packages
      - run:
          name: build
          command: dotnet build -c Debug core/Core.sln --no-restore
      - run:
          path: core
          name: check_vulnerability
          command: dotnet list package --vulnerable --include-transitive
      - run:
          path: core/Tests/Generic
          name: tests_generic
          command: dotnet test -v m --no-build
      - run:
          path: core/Tests/Language
          name: tests_language
          command: dotnet test -v m --no-build
      - run:
          path: core/Tests/Email
          name: tests_email
          command: dotnet test -v m --no-build
      - run:
          path: core/Tests/Exchange
          name: tests_exchange
          command: dotnet test -v m --no-build
      - run:
          path: core/Tests/BusinessLogic
          name: tests_business_logic
          command: dotnet test -v m --no-build
      - run:
          path: inbox
          name: zip_mails
          command: zip inbox.zip *.eml && rm *.eml
      - store_artifacts:
          path: inbox
      - store_artifacts:
          path: core/Tests/log
          destination: log


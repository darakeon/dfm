version: 2.1

jobs:
  core:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - dotnet-{{ checksum "site/Authentication/Authentication.csproj" }}-{{ checksum "site/BusinessLogic/BusinessLogic.csproj" }}-{{ checksum "site/Email/Email.csproj" }}-{{ checksum "site/Entities/Entities.csproj" }}-{{ checksum "site/Generic/Generic.csproj" }}-{{ checksum "site/Language/Language.csproj" }}-{{ checksum "site/MVC/MVC.csproj" }}-{{ checksum "site/Tests/BusinessLogic/BusinessLogic.Tests.csproj" }}-{{ checksum "site/Tests/Email/Email.Tests.csproj" }}-{{ checksum "site/Tests/Language/Language.Tests.csproj" }}-{{ checksum "site/Tests/MVC/MVC.Tests.csproj" }}
      - run:
          name: dependencies
          command: dotnet restore site/DFM.sln
      - save_cache:
          key: dotnet-{{ checksum "site/Authentication/Authentication.csproj" }}-{{ checksum "site/BusinessLogic/BusinessLogic.csproj" }}-{{ checksum "site/Email/Email.csproj" }}-{{ checksum "site/Entities/Entities.csproj" }}-{{ checksum "site/Generic/Generic.csproj" }}-{{ checksum "site/Language/Language.csproj" }}-{{ checksum "site/MVC/MVC.csproj" }}-{{ checksum "site/Tests/BusinessLogic/BusinessLogic.Tests.csproj" }}-{{ checksum "site/Tests/Email/Email.Tests.csproj" }}-{{ checksum "site/Tests/Language/Language.Tests.csproj" }}-{{ checksum "site/Tests/MVC/MVC.Tests.csproj" }}
          paths:
            - ~/.nuget/packages
      - run:
          name: build
          command: dotnet build -c Debug site/DFM.sln --no-restore
      - run:
          path: site/Tests/Language
          name: tests_language
          command: dotnet test -v m --no-build
      - run:
          path: site/Tests/Email
          name: tests_email
          command: dotnet test -v m --no-build
      - run:
          path: site/Tests/BusinessLogic
          name: tests_business_logic
          command: dotnet test -v m --no-build
      - run:
          path: site/Tests/MVC
          name: tests_mvc
          command: dotnet test -v m --no-build
      - store_artifacts:
          path: inbox

  site:
    docker:
      - image: darakeon/browser-tests
    steps:
      - checkout
      - restore_cache:
          keys:
            - dotnet-{{ checksum "site/Authentication/Authentication.csproj" }}-{{ checksum "site/BusinessLogic/BusinessLogic.csproj" }}-{{ checksum "site/Email/Email.csproj" }}-{{ checksum "site/Entities/Entities.csproj" }}-{{ checksum "site/Generic/Generic.csproj" }}-{{ checksum "site/Language/Language.csproj" }}-{{ checksum "site/MVC/MVC.csproj" }}-{{ checksum "site/Tests/BusinessLogic/BusinessLogic.Tests.csproj" }}-{{ checksum "site/Tests/Email/Email.Tests.csproj" }}-{{ checksum "site/Tests/Language/Language.Tests.csproj" }}-{{ checksum "site/Tests/MVC/MVC.Tests.csproj" }}
      - run:
          name: dependencies_dotnet
          command: dotnet restore site/DFM.sln
      - save_cache:
          key: dotnet-{{ checksum "site/Authentication/Authentication.csproj" }}-{{ checksum "site/BusinessLogic/BusinessLogic.csproj" }}-{{ checksum "site/Email/Email.csproj" }}-{{ checksum "site/Entities/Entities.csproj" }}-{{ checksum "site/Generic/Generic.csproj" }}-{{ checksum "site/Language/Language.csproj" }}-{{ checksum "site/MVC/MVC.csproj" }}-{{ checksum "site/Tests/BusinessLogic/BusinessLogic.Tests.csproj" }}-{{ checksum "site/Tests/Email/Email.Tests.csproj" }}-{{ checksum "site/Tests/Language/Language.Tests.csproj" }}-{{ checksum "site/Tests/MVC/MVC.Tests.csproj" }}
          paths:
            - ~/.nuget/packages
      - restore_cache:
          keys:
            - dotnet-libman-{{ checksum "site/MVC/libman.json" }}
      - run:
          name: dependencies_client
          path: site/MVC
          command: libman restore
      - save_cache:
          key: dotnet-libman-{{ checksum "site/MVC/libman.json" }}
          paths:
            - /site/MVC/Assets/Libs
      - run:
          name: publish_site
          path: site/MVC
          command: dotnet publish -c Release MVC.csproj -o ../Tests/Browser/server --no-restore
      - run:
          name: create_log_folders
          path: site/Tests/Browser
          command: mkdir log
      - restore_cache:
          keys:
            - node-{{ checksum "site/Tests/Browser/package.json" }}
      - run:
          name: dependencies_node
          path: site/Tests/Browser
          command: npm install
      - save_cache:
          key: node-{{ checksum "site/Tests/Browser/package.json" }}
          paths:
            - site/Tests/Browser/node_modules
      - run:
          name: allow_scripts_to_execute
          path: .circleci/browser
          command: chmod +x call-site.sh run-tests.sh
      - run:
          name: tests_browser
          command: .circleci/browser/run-tests.sh
      - store_artifacts:
          path: site/Tests/Browser/log
      - store_artifacts:
          path: inbox

  android:
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
            - jars-{{ checksum "android/build.gradle" }}-{{ checksum "android/TestUtils/build.gradle" }}-{{ checksum "android/Lib/build.gradle" }}-{{ checksum "android/DFM/build.gradle" }}-{{ checksum "android/ErrorLogs/build.gradle" }}
      - run:
          name: runable_gradlew
          path: android
          command: sudo chmod +x gradlew
      - run:
          name: dependencies
          path: android
          command: ./gradlew androidDependencies
      - save_cache:
          key: jars-{{ checksum "android/build.gradle" }}-{{ checksum "android/TestUtils/build.gradle" }}-{{ checksum "android/Lib/build.gradle" }}-{{ checksum "android/DFM/build.gradle" }}-{{ checksum "android/ErrorLogs/build.gradle" }}
          paths:
            - ~/.gradle
      - run:
          name: build
          path: android
          command: ./gradlew build -x test
      - run:
          name: tests_android
          path: android
          command: ./gradlew test
      - store_artifacts:
          path: android/TestUtils/build/reports
          destination: reports/testUtils
      - store_artifacts:
          path: android/Lib/build/reports
          destination: reports/lib
      - store_artifacts:
          path: android/DFM/build/reports
          destination: reports/app
      - store_artifacts:
          path: android/ErrorLogs/build/reports
          destination: reports/errorLogs
      #- store_test_results:
      #    path: android/DFM/build/test-results

workflows:
  version: 2.1
  build_all:
    jobs:
      - core
      - site
      - android

version: 2.1

# Do not change file .circleci/config.yml
# the folder .circleci/pieces has the parts of the script
# go to .git > hooks and create a file called pre-commit
# with this content (without first '#' sign)

# #!/bin/sh
# ./.circleci/assembly.sh


jobs:
  trufflehog:
    docker:
      - image: python:3-alpine
    steps:
      - checkout
      - run:
          name: install trufflehog
          command: apk add --no-cache git && pip install gitdb2==3.0.0 trufflehog
      - run:
          name: run trufflehog
          command: trufflehog --exclude_paths .circleci/trufflehog/exclude-patterns.txt --allow .circleci/trufflehog/allow.json .

  test_ci:
    docker:
      - image: darakeon/ubuntu
    resource_class: small
    steps:
      - checkout
      - run:
          name: copy old
          path: .circleci
          command: cp config.yml config_old.yml
      - run:
          name: assembly
          command: ./.circleci/assembly.sh check
      - run:
          name: compare
          path: .circleci
          command: if [[ $(diff config.yml config_old.yml) != '' ]]; then echo 'outdated ci config'; exit 1; fi

  push_docker_browser:
    docker:
      - image: docker
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - run:
          name: Install make
          command: apk add make
      - run:
          name: Login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run:
          name: Build images
          path: ci
          command: make build_browser PUSH=1

  push_docker_android:
    docker:
      - image: docker
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - run:
          name: Install make
          command: apk add make
      - run:
          name: Login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run:
          name: Build images
          path: ci
          command: make build_android PUSH=1

  build_core:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - run:
          name: set checksums
          command: |
            CS_AUTH=$(md5sum core/Authentication/Authentication.csproj | cut -d' ' -f1)
            CS_BUSI=$(md5sum core/BusinessLogic/BusinessLogic.csproj | cut -d' ' -f1)
            CS_MAIL=$(md5sum core/Email/Email.csproj | cut -d' ' -f1)
            CS_ENTI=$(md5sum core/Entities/Entities.csproj | cut -d' ' -f1)
            CS_GENE=$(md5sum core/Generic/Generic.csproj | cut -d' ' -f1)
            CS_LANG=$(md5sum core/Language/Language.csproj | cut -d' ' -f1)
            CS_EXCH=$(md5sum core/Exchange/Exchange.csproj | cut -d' ' -f1)
            CS_TBUS=$(md5sum core/Tests/BusinessLogic/BusinessLogic.Tests.csproj | cut -d' ' -f1)
            CS_TMAI=$(md5sum core/Tests/Email/Email.Tests.csproj | cut -d' ' -f1)
            CS_TLAN=$(md5sum core/Tests/Language/Language.Tests.csproj | cut -d' ' -f1)
            CS_TEXC=$(md5sum core/Tests/Exchange/Exchange.Tests.csproj | cut -d' ' -f1)
            CS_TGEN=$(md5sum core/Tests/Generic/Generic.Tests.csproj | cut -d' ' -f1)

            CACHE_KEY=$CS_AUTH-$CS_BUSI-$CS_MAIL-$CS_ENTI-$CS_GENE-$CS_LANG-$CS_EXCH
            CACHE_KEY=$CACHE_KEY-$CS_TBUS-$CS_TMAI-$CS_TLAN-$CS_TEXC-$CS_TGEN
            echo $CACHE_KEY > core/cache_key
      - restore_cache:
          keys:
            - dotnet-{{ checksum "core/cache_key" }}
      - run:
          name: dependencies
          command: dotnet restore core/Core.sln
      - save_cache:
          key: dotnet-{{ checksum "core/cache_key" }}
          paths:
            - ~/.nuget/packages
      - run:
          name: build
          command: dotnet build -c Debug core/Core.sln --no-restore
      - persist_to_workspace:
          root: core
          paths:
            - cache_key
            - Authentication/bin
            - BusinessLogic/bin
            - Email/bin
            - Entities/bin
            - Exchange/bin
            - Generic/bin
            - Language/bin
            - Logs/bin
            - Authentication/obj
            - BusinessLogic/obj
            - Email/obj
            - Entities/obj
            - Exchange/obj
            - Generic/obj
            - Language/obj
            - Logs/obj
            - Tests/BusinessLogic/bin
            - Tests/Email/bin
            - Tests/Entities/bin
            - Tests/Exchange/bin
            - Tests/Generic/bin
            - Tests/Language/bin
            - Tests/Util/bin
            - Tests/BusinessLogic/obj
            - Tests/Email/obj
            - Tests/Entities/obj
            - Tests/Exchange/obj
            - Tests/Generic/obj
            - Tests/Language/obj
            - Tests/Util/obj

  audit_core:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - attach_workspace:
          at: core
      - restore_cache:
          keys:
            - dotnet-{{ checksum "core/cache_key" }}
      - run:
          path: core
          name: check vulnerability
          command: |
            RESULT=$(dotnet list package --vulnerable --include-transitive | grep 'has no vulnerable')

            echo "$RESULT"

            NUMBER_OF_PROJECTS=15
            CURRENT=$(echo "$RESULT" | wc -l)

            if [ $CURRENT != $NUMBER_OF_PROJECTS ]; then
                exit 1
            fi

  test_core_generic:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - attach_workspace:
          at: core
      - restore_cache:
          keys:
            - dotnet-{{ checksum "core/cache_key" }}
      - run:
          path: core/Tests/Generic
          name: tests generic
          command: dotnet test -v m --no-build
      - store_artifacts:
          path: core/Tests/log
          destination: log

  test_core_language:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - attach_workspace:
          at: core
      - restore_cache:
          keys:
            - dotnet-{{ checksum "core/cache_key" }}
      - run:
          path: core/Tests/Language
          name: tests language
          command: dotnet test -v m --no-build
      - store_artifacts:
          path: core/Tests/log
          destination: log

  test_core_email:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - attach_workspace:
          at: core
      - restore_cache:
          keys:
            - dotnet-{{ checksum "core/cache_key" }}
      - run:
          path: core/Tests/Email
          name: tests email
          command: dotnet test -v m --no-build
      - run:
          path: inbox
          name: zip mails
          command: zip inbox.zip *.eml && rm *.eml
      - store_artifacts:
          path: inbox
      - store_artifacts:
          path: core/Tests/log
          destination: log

  test_core_exchange:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - attach_workspace:
          at: core
      - restore_cache:
          keys:
            - dotnet-{{ checksum "core/cache_key" }}
      - run:
          path: core/Tests/Exchange
          name: tests exchange
          command: dotnet test -v m --no-build
      - store_artifacts:
          path: core/Tests/log
          destination: log

  test_core_entities:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - attach_workspace:
          at: core
      - restore_cache:
          keys:
            - dotnet-{{ checksum "core/cache_key" }}
      - run:
          path: core/Tests/Entities
          name: tests entities
          command: dotnet test -v m --no-build
      - store_artifacts:
          path: core/Tests/log
          destination: log

  test_core_business_logic:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - attach_workspace:
          at: core
      - restore_cache:
          keys:
            - dotnet-{{ checksum "core/cache_key" }}
      - run:
          path: core/Tests/BusinessLogic
          name: tests business logic
          command: dotnet test -v m --no-build
      - run:
          path: inbox
          name: zip mails
          command: zip inbox.zip *.eml && rm *.eml
      - store_artifacts:
          path: inbox
      - store_artifacts:
          path: core/Tests/log
          destination: log

  build_site:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - attach_workspace:
          at: core
      - run:
          name: set checksums
          command: |
            CS_AUTH=$(md5sum core/Authentication/Authentication.csproj | cut -d' ' -f1)
            CS_BUSI=$(md5sum core/BusinessLogic/BusinessLogic.csproj | cut -d' ' -f1)
            CS_MAIL=$(md5sum core/Email/Email.csproj | cut -d' ' -f1)
            CS_ENTI=$(md5sum core/Entities/Entities.csproj | cut -d' ' -f1)
            CS_GENE=$(md5sum core/Generic/Generic.csproj | cut -d' ' -f1)
            CS_LANG=$(md5sum core/Language/Language.csproj | cut -d' ' -f1)
            CS_EXCH=$(md5sum core/Exchange/Exchange.csproj | cut -d' ' -f1)
            CS_MVC_=$(md5sum site/MVC/MVC.csproj | cut -d' ' -f1)
            CS_TMVC=$(md5sum site/Tests/MVC/MVC.Tests.csproj | cut -d' ' -f1)

            CACHE_KEY=$CS_AUTH-$CS_BUSI-$CS_MAIL-$CS_ENTI-$CS_GENE-$CS_LANG-$CS_EXCH-$CS_MVC_-$CS_TMVC
            echo $CACHE_KEY > site/cache_key
      - restore_cache:
          keys:
            - dotnet-{{ checksum "site/cache_key" }}
      - run:
          name: dependencies
          command: dotnet restore site/Site.sln
      - save_cache:
          key: dotnet-{{ checksum "site/cache_key" }}
          paths:
            - ~/.nuget/packages
      - run:
          name: build
          command: dotnet build -c Debug site/Site.sln --no-restore
      - persist_to_workspace:
          root: site
          paths:
            - cache_key
            - MVC/bin
            - MVC/obj
            - Tests/MVC/bin
            - Tests/MVC/obj

  audit_site:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - attach_workspace:
          at: core
      - attach_workspace:
          at: site
      - restore_cache:
          keys:
            - dotnet-{{ checksum "site/cache_key" }}
      - run:
          path: site
          name: check vulnerability
          command: |
            RESULT=$(dotnet list package --vulnerable --include-transitive | grep 'has no vulnerable')

            echo "$RESULT"

            NUMBER_OF_PROJECTS=11
            CURRENT=$(echo "$RESULT" | wc -l)

            if [ $CURRENT != $NUMBER_OF_PROJECTS ]; then
                exit 1
            fi

  test_site:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - attach_workspace:
          at: site
      - restore_cache:
          keys:
            - dotnet-{{ checksum "site/cache_key" }}
      - run:
          path: site/Tests/MVC
          name: tests mvc
          command: dotnet test -v m --no-build
      - store_artifacts:
          path: inbox
      - store_artifacts:
          path: site/Tests/log
          destination: log

  audit_test_browser:
    docker:
      - image: darakeon/dfm-browser-tests
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - restore_cache:
          keys:
            - node-{{ checksum "site/Tests/Browser/package.json" }}-{{ checksum "site/Tests/Browser/package-lock.json" }}
      - run:
          name: dependencies node
          path: site/Tests/Browser
          command: npm install
      - save_cache:
          key: node-{{ checksum "site/Tests/Browser/package.json" }}-{{ checksum "site/Tests/Browser/package-lock.json" }}
          paths:
            - site/Tests/Browser/node_modules
      - run:
          name: check_dependencies node
          path: site/Tests/Browser
          command: npm audit
      - store_artifacts:
          path: /root/.npm/_logs/
      - store_artifacts:
          path: /root/.npm/eresolve-report.txt

  test_browser:
    docker:
      - image: darakeon/dfm-browser-tests
    steps:
      - checkout
      - attach_workspace:
          at: core
      - attach_workspace:
          at: site
      - restore_cache:
          keys:
            - dotnet-{{ checksum "site/cache_key" }}
      - restore_cache:
          keys:
            - dotnet-libman-{{ checksum "site/MVC/libman.json" }}
      - run:
          name: dependencies client
          path: site/MVC
          command: libman restore
      - save_cache:
          key: dotnet-libman-{{ checksum "site/MVC/libman.json" }}
          paths:
            - site/MVC/Assets/libs
      - run:
          name: publish site
          path: site/MVC
          command: dotnet publish -c Release MVC.csproj -o ../Tests/Browser/server --no-restore
      - restore_cache:
          keys:
            - node-{{ checksum "site/Tests/Browser/package.json" }}-{{ checksum "site/Tests/Browser/package-lock.json" }}
      - run:
          name: tests browser
          command: .circleci/browser/run-tests.sh
      - store_artifacts:
          path: site/Tests/Browser/log
      - store_artifacts:
          path: inbox
      - store_artifacts:
          path: s3

  build_android:
    docker:
      - image: darakeon/android
    steps:
      - checkout
      - run:
          name: create empty credentials file
          path: android
          command: echo "storeFile=\nstorePassword=\nkeyAlias=\nkeyPassword=" > keystore.properties
      - run:
          name: set checksums
          command: |
            KT_DOCK=$(md5sum ci/android.dockerfile | cut -d' ' -f1)
            KT_MAIN=$(md5sum android/build.gradle | cut -d' ' -f1)
            KT_UTIL=$(md5sum android/TestUtils/build.gradle | cut -d' ' -f1)
            KT_LIBR=$(md5sum android/Lib/build.gradle | cut -d' ' -f1)
            KT_APPL=$(md5sum android/App/build.gradle | cut -d' ' -f1)
            KT_ERRO=$(md5sum android/ErrorLogs/build.gradle | cut -d' ' -f1)

            CACHE_KEY=$KT_DOCK-$KT_MAIN-$KT_UTIL-$KT_LIBR-$KT_APPL-$KT_ERRO
            echo $CACHE_KEY > android/cache_key
      - restore_cache:
          keys:
            - kotlin-{{ checksum "android/cache_key" }}
      - run:
          name: project dependencies
          path: android
          command: gradle androidDependencies
      - run:
          name: robolectric dependencies
          path: android
          command: gradle robolectricSdkDownload
      - save_cache:
          key: kotlin-{{ checksum "android/cache_key" }}
          paths:
            - /var/cache/gradle
      - run:
          name: build
          path: android
          command: gradle build -x test -x androidDependencies -x packageRelease -x packageDebug
      - run:
          name: configure
          path: android
          command: gradle configure
      - store_artifacts:
          path: android/TestUtils/build/reports
          destination: reports/testUtils
      - store_artifacts:
          path: android/Lib/build/reports
          destination: reports/lib
      - store_artifacts:
          path: android/App/build/reports
          destination: reports/app
      - store_artifacts:
          path: android/ErrorLogs/build/reports
          destination: reports/errorLogs
      - persist_to_workspace:
          root: android
          paths:
            - cache_key
            - keystore.properties
            - Lib/build
            - App/build
            - ErrorLogs/build
            - TestUtils/build

  audit_android:
    docker:
      - image: darakeon/android
    steps:
      - checkout
      - attach_workspace:
          at: android
      - restore_cache:
          keys:
            - kotlin-{{ checksum "android/cache_key" }}
      - run:
          name: check vulnerability
          path: android
          command: gradle dependencyCheckAnalyze

  test_android_lib_debug:
    docker:
      - image: darakeon/android
    steps:
      - checkout
      - attach_workspace:
          at: android
      - restore_cache:
          keys:
            - kotlin-{{ checksum "android/cache_key" }}
      - run:
          name: tests lib debug
          path: android
          command: gradle :Lib:testDebugUnitTest -x androidDependencies -x build -x packageRelease -x packageDebug
      - store_artifacts:
          path: android/Lib/log
          destination: log/lib
      - store_test_results:
          path: android/Lib/build/test-results

  test_android_lib_release:
    docker:
      - image: darakeon/android
    steps:
      - checkout
      - attach_workspace:
          at: android
      - restore_cache:
          keys:
            - kotlin-{{ checksum "android/cache_key" }}
      - run:
          name: tests lib release
          path: android
          command: gradle :Lib:testReleaseUnitTest -x androidDependencies -x build -x packageRelease -x packageDebug
      - store_artifacts:
          path: android/Lib/log
          destination: log/lib
      - store_test_results:
          path: android/Lib/build/test-results

  test_android_app_debug:
    docker:
      - image: darakeon/android
    steps:
      - checkout
      - attach_workspace:
          at: android
      - restore_cache:
          keys:
            - kotlin-{{ checksum "android/cache_key" }}
      - run:
          name: tests app debug
          path: android
          command: gradle :App:testDebugUnitTest -x androidDependencies -x build -x packageRelease -x packageDebug
      - store_artifacts:
          path: android/App/log
          destination: log/app
      - store_test_results:
          path: android/App/build/test-results

  test_android_app_release:
    docker:
      - image: darakeon/android
    steps:
      - checkout
      - attach_workspace:
          at: android
      - restore_cache:
          keys:
            - kotlin-{{ checksum "android/cache_key" }}
      - run:
          name: tests app release
          path: android
          command: gradle :App:testReleaseUnitTest -x androidDependencies -x build -x packageRelease -x packageDebug
      - store_artifacts:
          path: android/App/log
          destination: log/app
      - store_test_results:
          path: android/App/build/test-results

  build_robot:
    docker:
      - image: darakeon/netcore
    resource_class: small
    environment:
      ASPNETCORE_ENVIRONMENT: circleCI
    steps:
      - checkout
      - attach_workspace:
          at: core
      - run:
          name: set checksums
          command: |
            CS_AUTH=$(md5sum core/Authentication/Authentication.csproj | cut -d' ' -f1)
            CS_BUSI=$(md5sum core/BusinessLogic/BusinessLogic.csproj | cut -d' ' -f1)
            CS_MAIL=$(md5sum core/Email/Email.csproj | cut -d' ' -f1)
            CS_ENTI=$(md5sum core/Entities/Entities.csproj | cut -d' ' -f1)
            CS_GENE=$(md5sum core/Generic/Generic.csproj | cut -d' ' -f1)
            CS_LANG=$(md5sum core/Language/Language.csproj | cut -d' ' -f1)
            CS_EXCH=$(md5sum core/Exchange/Exchange.csproj | cut -d' ' -f1)
            CS_ROBT=$(md5sum robot/Robot/Robot.csproj | cut -d' ' -f1)

            CACHE_KEY=$CS_AUTH-$CS_BUSI-$CS_MAIL-$CS_ENTI-$CS_GENE-$CS_LANG-$CS_EXCH-$CS_ROBT
            echo $CACHE_KEY > robot/cache_key
      - restore_cache:
          keys:
            - dotnet-{{ checksum "robot/cache_key" }}
      - run:
          name: dependencies
          command: dotnet restore robot/Robot.sln
      - save_cache:
          key: dotnet-{{ checksum "robot/cache_key" }}
          paths:
            - ~/.nuget/packages
      - run:
          name: build
          path: robot
          command: dotnet build -c Release Robot.sln --no-restore
      - persist_to_workspace:
          root: robot
          paths:
            - cache_key
            - Robot/bin
            - Robot/obj

  audit_robot:
    docker:
      - image: darakeon/netcore
    resource_class: small
    environment:
      ASPNETCORE_ENVIRONMENT: circleCI
    steps:
      - checkout
      - attach_workspace:
          at: core
      - attach_workspace:
          at: robot
      - restore_cache:
          keys:
            - dotnet-{{ checksum "robot/cache_key" }}
      - run:
          path: robot
          name: check vulnerability
          command: |
            RESULT=$(dotnet list package --vulnerable --include-transitive | grep 'has no vulnerable')

            echo "$RESULT"

            NUMBER_OF_PROJECTS=9
            CURRENT=$(echo "$RESULT" | wc -l)

            if [ $CURRENT != $NUMBER_OF_PROJECTS ]; then
                exit 1
            fi

  check_robot:
    docker:
      - image: darakeon/netcore
    resource_class: small
    environment:
      ASPNETCORE_ENVIRONMENT: circleCI
    steps:
      - checkout
      - attach_workspace:
          at: robot
      - restore_cache:
          keys:
            - dotnet-{{ checksum "robot/cache_key" }}
      - run:
          name: check
          path: robot/Robot/bin/Release/net6.0
          command: ./DFM.Robot check

  build_midna:
    docker:
      - image: python:3.11 # if change, remember to change save_cache
    steps:
      - checkout
      - restore_cache:
          keys:
            - python-{{ checksum "midna/src/requirements.txt" }}
      - run:
          path: midna/src
          name: Upgrade pip
          command: pip install --upgrade pip
      - run:
          path: midna/src
          name: dependencies
          command: pip install -r requirements.txt
      - save_cache:
          key: python-{{ checksum "midna/src/requirements.txt" }}
          paths:
            - /usr/local/lib/python3.11/site-packages/
      #- persist_to_workspace:
      #    root: midna
      #    paths:
      #      -

  audit_midna:
    docker:
      - image: python:3.11 # if change, remember to change save_cache
    steps:
      - checkout
      #- attach_workspace:
      #    at: midna
      - restore_cache:
          keys:
            - python-{{ checksum "midna/src/requirements.txt" }}
      - run:
          path: midna/src
          name: check vulnerability
          command: python -m pip_audit

  test_midna:
    docker:
      - image: python:3.11 # if change, remember to change save_cache
    steps:
      - checkout
      #- attach_workspace:
      #    at: midna
      - restore_cache:
          keys:
            - python-{{ checksum "midna/src/requirements.txt" }}
      - run:
          path: midna
          name: run tests
          command: |
            set -o allexport
            source env/example.env
            set +o allexport
            cd src
            python manage.py test deleted_users

  audit_version_changer:
    docker:
      - image: rust
    resource_class: small
    environment:
      RUST_BACKTRACE: 1
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "15:78:d5:ca:e6:7d:80:e6:2d:1f:35:a1:f3:9d:1b:48"
      - restore_cache:
          keys:
            - cargo-version-{{ checksum "version/Cargo.toml" }}-{{ checksum "version/Cargo.lock" }}
      - run:
          name: install
          path: version
          command: |
            if [ ! -f /usr/local/cargo/bin/cargo-audit ]; then
              cargo install cargo-audit
            else
              echo "cargo audit already installed"
            fi
      - save_cache:
          key: cargo-version-{{ checksum "version/Cargo.toml" }}-{{ checksum "version/Cargo.lock" }}
          paths:
            - /usr/local/cargo/bin/
            - /usr/local/cargo/registry/
      - run:
          name: audit
          path: version
          command: cargo audit && echo "All OK!"
      #- persist_to_workspace:
      #    root: version
      #    paths:
      #      -

  change_version:
    docker:
      - image: rust
    resource_class: small
    environment:
      RUST_BACKTRACE: 1
    steps:
      - checkout
      #- attach_workspace:
      #    at: version
      - restore_cache:
          keys:
            - cargo-version-{{ checksum "version/Cargo.toml" }}-{{ checksum "version/Cargo.lock" }}
      - run:
          name: build
          path: version
          command: cargo build
      - run:
          name: version change
          path: version
          command: |
            echo "Version: $VERSION"
            echo "Circle branch: $CIRCLE_BRANCH"
            echo "New tasks: $NEW_TASKS"

            if [ "$VERSION" == "$CIRCLE_BRANCH" ] ; then

              if [ "$NEW_TASKS" == "0" ] ; then
                cargo run -q -- -e
              else
                cargo run -q -- -q $NEW_TASKS
              fi

              git log -2
              git push -u origin $CIRCLE_BRANCH

            else
              cargo run -q -- -c
            fi

workflows:
  version: 2.1
  build_all:
    jobs:
      - trufflehog
      - test_ci:
          requires:
            - trufflehog
      - push_docker_browser:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
          requires:
            - test_ci
      - push_docker_android:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
          requires:
            - test_ci
      - build_core:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
                - /^dependabot/nuget/robot/.+$/
          requires:
            - test_ci
      - audit_core:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
                - /^dependabot/nuget/robot/.+$/
          requires:
            - build_core
      - test_core_generic:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
                - /^dependabot/nuget/robot/.+$/
          requires:
            - build_core
      - test_core_language:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
                - /^dependabot/nuget/robot/.+$/
          requires:
            - build_core
      - test_core_email:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
                - /^dependabot/nuget/robot/.+$/
          requires:
            - build_core
      - test_core_exchange:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
                - /^dependabot/nuget/robot/.+$/
          requires:
            - build_core
      - test_core_entities:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
                - /^dependabot/nuget/robot/.+$/
          requires:
            - build_core
      - test_core_business_logic:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
                - /^dependabot/nuget/robot/.+$/
          requires:
            - build_core
      - build_site:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
          requires:
            - build_core
      - audit_site:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
          requires:
            - build_site
      - test_site:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
          requires:
            - build_site
      - audit_test_browser:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
                - /^dependabot/npm_and_yarn/site/Tests/Browser.+$/
          requires:
            - test_ci
      - test_browser:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/core/.+$/
                - /^dependabot/nuget/site/.+$/
                - /^dependabot/npm_and_yarn/site/Tests/Browser.+$/
          requires:
            - audit_test_browser
            - build_site
            - push_docker_browser
      - build_android:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/gradle/android/.+$/
          requires:
            - test_ci
            - push_docker_android
      - audit_android:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/gradle/android/.+$/
          requires:
            - build_android
      - test_android_lib_debug:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/gradle/android/.+$/
          requires:
            - build_android
      - test_android_lib_release:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/gradle/android/.+$/
          requires:
            - build_android
      - test_android_app_debug:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/gradle/android/.+$/
          requires:
            - build_android
      - test_android_app_release:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/gradle/android/.+$/
          requires:
            - build_android
      - build_robot:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/robot/.+$/
          requires:
            - build_core
      - audit_robot:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/robot/.+$/
          requires:
            - build_robot
      - check_robot:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/nuget/robot/.+$/
          requires:
            - build_robot
      - build_midna:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/pip/midna/.+$/
          requires:
            - test_ci
      - audit_midna:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/pip/midna/.+$/
          requires:
            - build_midna
      - test_midna:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/pip/midna/.+$/
          requires:
            - build_midna
      - audit_version_changer:
          filters:
            branches:
              only:
                - main
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/cargo/version/.+$/
          requires:
            - test_ci
      - change_version:
          filters:
            branches:
              only:
                - /^\d+\.\d+\.\d+\.\d+$/
                - /^dependabot/cargo/version/.+$/
          requires:
            - trufflehog
            - test_ci
            - push_docker_browser
            - push_docker_android
            - build_core
            - audit_core
            - test_core_generic
            - test_core_language
            - test_core_email
            - test_core_exchange
            - test_core_entities
            - test_core_business_logic
            - build_site
            - audit_site
            - test_site
            - audit_test_browser
            - test_browser
            - build_android
            - audit_android
            - test_android_lib_debug
            - test_android_lib_release
            - test_android_app_debug
            - test_android_app_release
            - build_robot
            - audit_robot
            - check_robot
            - build_midna
            - audit_midna
            - test_midna
            - audit_version_changer
